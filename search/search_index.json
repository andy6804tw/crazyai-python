{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u5168\u6c11\u760bAI\u7cfb\u5217 [Python\u5f9e\u96f6\u958b\u59cb]","text":""},{"location":"#python","title":"\u95dc\u65bc Python","text":"<p>Python \u662f\u7576\u4eca\u4e16\u754c\u4e0a\u6700\u6d41\u884c\u4e14\u5ee3\u6cdb\u4f7f\u7528\u7684\u7a0b\u5f0f\u8a9e\u8a00\u4e4b\u4e00\uff0c\u4ee5\u5176\u7c21\u55ae\u6613\u5b78\u548c\u5f37\u5927\u529f\u80fd\u800c\u8457\u7a31\u3002\u7121\u8ad6\u662f\u521d\u5b78\u8005\u9084\u662f\u5c08\u696d\u958b\u767c\u8005\uff0cPython \u90fd\u662f\u4e00\u500b\u7406\u60f3\u7684\u9078\u64c7\uff0c\u56e0\u70ba\u5b83\u80fd\u5920\u61c9\u7528\u65bc\u5404\u7a2e\u9818\u57df\uff0c\u5f9e\u7db2\u8def\u958b\u767c\u5230\u8cc7\u6599\u79d1\u5b78\uff0c\u751a\u81f3\u662f\u4eba\u5de5\u667a\u6167\u548c\u6a5f\u5668\u5b78\u7fd2\u3002</p> <p></p>"},{"location":"#python_1","title":"Python \u540d\u7a31\u7684\u7531\u4f86","text":"<p>Python \u7684\u5275\u9020\u8005\u662f\u8377\u862d\u7684\u7a0b\u5f0f\u8a2d\u8a08\u5e2b\u5409\u591a\u00b7\u8303\u7f85\u8607\u59c6 (Guido van Rossum)\u30021989 \u5e74\u7684\u8056\u8a95\u7bc0\u671f\u9593\uff0c\u4ed6\u6c7a\u5b9a\u82b1\u4e09\u500b\u6708\u7684\u6642\u9593\u8a2d\u8a08\u4e00\u7a2e\u65b0\u7684\u7a0b\u5f0f\u8a9e\u8a00\uff0c\u65e8\u5728\u89e3\u6c7a\u7576\u6642\u4e00\u4e9b\u7a0b\u5f0f\u8a9e\u8a00\u7684\u7f3a\u9ede\u3002\u9019\u500b\u5c08\u6848\u5f8c\u4f86\u6210\u70ba\u4e86 Python\u3002\u540d\u5b57\u7684\u9748\u611f\u4f86\u81ea\u65bc\u5409\u591a\u975e\u5e38\u559c\u611b\u7684\u4e00\u500b\u82f1\u570b\u96fb\u8996\u559c\u5287\u5718\u9ad4\u2014\u2014\u8499\u63d0\u00b7\u6d3e\u68ee (Monty Python)\uff0c\u56e0\u6b64\u4ed6\u6c7a\u5b9a\u5c07\u9019\u500b\u8a9e\u8a00\u547d\u540d\u70ba \"Python\"\u3002</p>"},{"location":"#python_2","title":"Python \u7684\u7279\u8272","text":"<p>Python \u662f\u4e00\u7a2e\u529f\u80fd\u5f37\u5927\u7684\u76f4\u8b6f\u5f0f\u3001\u9ad8\u968e\u901a\u7528\u7a0b\u5f0f\u8a9e\u8a00\u3002\u5b83\u652f\u63f4\u591a\u7a2e\u7a0b\u5f0f\u8a2d\u8a08\u7bc4\u5f0f\uff0c\u5305\u62ec\u7d50\u69cb\u5316\u3001\u7a0b\u5e8f\u5f0f\u3001\u7269\u4ef6\u5c0e\u5411\u3001\u51fd\u6578\u5f0f\u548c\u53cd\u5c04\u5f0f\u7de8\u7a0b\u3002Python \u63a1\u7528\u52d5\u614b\u578b\u5225\u7cfb\u7d71\u548c\u81ea\u52d5\u8a18\u61b6\u9ad4\u7ba1\u7406\uff0c\u4f7f\u5f97\u958b\u767c\u8005\u7121\u9700\u904e\u65bc\u95dc\u6ce8\u4f4e\u5c64\u6b21\u7684\u7d30\u7bc0\uff0c\u800c\u80fd\u5c08\u6ce8\u65bc\u5be6\u73fe\u7a0b\u5f0f\u7684\u908f\u8f2f\u3002</p> <ul> <li>\u7c21\u6f54\u6613\u8b80: Python \u7684\u8a9e\u6cd5\u8a2d\u8a08\u975e\u5e38\u7c21\u6f54\uff0c\u8b93\u7a0b\u5f0f\u78bc\u7684\u53ef\u8b80\u6027\u548c\u7dad\u8b77\u6027\u6975\u9ad8\uff0c\u9069\u5408\u521d\u5b78\u8005\u5feb\u901f\u4e0a\u624b\u3002</li> <li>\u5f37\u5927\u7684\u793e\u7fa4\u652f\u63f4: \u64c1\u6709\u5168\u7403\u6d3b\u8e8d\u7684\u958b\u767c\u8005\u793e\u7fa4\uff0c\u63d0\u4f9b\u8c50\u5bcc\u7684\u8cc7\u6e90\u548c\u652f\u6301\uff0c\u7121\u8ad6\u662f\u5b78\u7fd2\u9084\u662f\u89e3\u6c7a\u554f\u984c\uff0c\u90fd\u80fd\u627e\u5230\u5408\u9069\u7684\u7b54\u6848\u3002</li> <li>\u9f90\u5927\u7684\u6a19\u6e96\u5eab: Python \u7684\u6a19\u6e96\u5eab\u6db5\u84cb\u4e86\u5f9e\u7db2\u8def\u3001\u6587\u4ef6\u8655\u7406\u5230\u8cc7\u6599\u5eab\u7ba1\u7406\u3001GUI \u958b\u767c\u7b49\u5404\u500b\u65b9\u9762\uff0c\u70ba\u958b\u767c\u8005\u63d0\u4f9b\u4e86\u591a\u7a2e\u958b\u7bb1\u5373\u7528\u7684\u529f\u80fd\u3002</li> <li>\u8c50\u5bcc\u7684\u7b2c\u4e09\u65b9\u5eab: \u7121\u8ad6\u4f60\u9700\u8981\u9032\u884c\u8cc7\u6599\u79d1\u5b78\u5206\u6790\u3001\u7db2\u8def\u958b\u767c\uff0c\u9084\u662f\u69cb\u5efa\u4eba\u5de5\u667a\u6167\u6a21\u578b\uff0c\u90fd\u80fd\u627e\u5230\u5408\u9069\u7684\u7b2c\u4e09\u65b9\u5eab\u4f86\u52a0\u901f\u958b\u767c\u3002</li> <li>\u61c9\u7528\u7bc4\u570d\u5ee3\u6cdb: Python \u88ab\u5ee3\u6cdb\u61c9\u7528\u65bc\u8cc7\u6599\u79d1\u5b78\u3001\u81ea\u52d5\u5316\u6e2c\u8a66\u3001\u7db2\u7ad9\u958b\u767c\u3001\u8edf\u9ad4\u958b\u767c\u3001\u5546\u696d\u61c9\u7528\u3001\u591a\u5a92\u9ad4\u8655\u7406\u7b49\u9818\u57df\uff0c\u662f\u4e00\u500b\u771f\u6b63\u7684\u901a\u7528\u8a9e\u8a00\u3002</li> </ul>"},{"location":"#python_3","title":"Python \u53ef\u4ee5\u505a\u4ec0\u9ebc\uff1f","text":"<p>Python \u7684\u61c9\u7528\u9818\u57df\u6975\u5176\u5ee3\u6cdb\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4e3b\u8981\u7684\u61c9\u7528\u5834\u666f\uff1a</p> <ul> <li>\u7db2\u8def\u722c\u87f2\u8207\u8cc7\u8a0a\u64f7\u53d6: \u5229\u7528 Python \u53ef\u4ee5\u8f15\u9b06\u69cb\u5efa\u7db2\u8def\u722c\u87f2\uff0c\u5f9e\u7db2\u7ad9\u4e0a\u81ea\u52d5\u64f7\u53d6\u8cc7\u6599\uff0c\u4e26\u9032\u884c\u5f8c\u7e8c\u8655\u7406\u3002</li> <li>\u6578\u64da\u8655\u7406\u8207\u8996\u89ba\u5316: Python \u63d0\u4f9b\u4e86\u5982 Pandas\u3001NumPy \u548c Matplotlib \u7b49\u5f37\u5927\u7684\u5de5\u5177\uff0c\u7528\u65bc\u6578\u64da\u8655\u7406\u3001\u5206\u6790\u8207\u8996\u89ba\u5316\u5c55\u793a\u3002</li> <li>\u6a5f\u5668\u5b78\u7fd2\u8207\u4eba\u5de5\u667a\u6167: Python \u662f\u69cb\u5efa\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u548c\u4eba\u5de5\u667a\u6167\u61c9\u7528\u7684\u4e3b\u6d41\u8a9e\u8a00\uff0c\u64c1\u6709\u5982 TensorFlow\u3001PyTorch \u7b49\u591a\u7a2e\u6846\u67b6\u3002</li> <li>\u81ea\u52d5\u5316\u6e2c\u8a66: \u5229\u7528 Python \u53ef\u4ee5\u9032\u884c\u8edf\u9ad4\u6e2c\u8a66\u81ea\u52d5\u5316\uff0c\u7bc0\u7701\u5927\u91cf\u4eba\u529b\u548c\u6642\u9593\u3002</li> <li>\u7db2\u7ad9\u958b\u767c: Django \u548c FastAPI \u7b49 Python \u6846\u67b6\u4f7f\u5f97\u7db2\u7ad9\u958b\u767c\u8b8a\u5f97\u7c21\u55ae\u800c\u9ad8\u6548\u3002</li> <li>\u8edf\u9ad4\u958b\u767c: Python \u4e0d\u50c5\u9069\u5408\u5c0f\u578b\u61c9\u7528\u958b\u767c\uff0c\u4e5f\u80fd\u652f\u6490\u5927\u578b\u8edf\u9ad4\u9805\u76ee\uff0c\u5177\u5099\u6975\u9ad8\u7684\u53ef\u64f4\u5c55\u6027\u3002</li> <li>\u5546\u696d\u61c9\u7528: Python \u5728\u5546\u696d\u9818\u57df\u4e2d\u5ee3\u6cdb\u61c9\u7528\uff0c\u5f9eERP\u7cfb\u7d71\u5230\u91d1\u878d\u5206\u6790\uff0c\u5747\u6709\u5b83\u7684\u8eab\u5f71\u3002</li> <li>\u591a\u5a92\u9ad4\u61c9\u7528: Python \u53ef\u7528\u65bc\u97f3\u8a0a\u3001\u8996\u8a0a\u8655\u7406\uff0c\u751a\u81f3\u662f\u5716\u50cf\u751f\u6210\u8207\u7de8\u8f2f\uff0c\u63d0\u4f9b\u4e86\u8c50\u5bcc\u7684\u591a\u5a92\u9ad4\u8655\u7406\u5de5\u5177\u3002</li> </ul>"},{"location":"#python_4","title":"Python \u5b78\u7fd2\u5730\u5716","text":"<p>\u9019\u5f35\u5b78\u7fd2\u5730\u5716\u4f5c\u70ba\u4e00\u500b\u6307\u5357\uff0c\u63d0\u4f9b\u4e86\u5b78\u7fd2Python\u7684\u7cfb\u7d71\u5316\u8def\u5f91\u3002\u6839\u64da\u9019\u500b\u5730\u5716\uff0c\u4f60\u53ef\u4ee5\u6709\u689d\u7406\u5730\u5b78\u7fd2Python\uff0c\u5f9e\u57fa\u790e\u5230\u9032\u968e\uff0c\u9010\u6b65\u638c\u63e1\u9019\u9580\u5f37\u5927\u7684\u7a0b\u5f0f\u8a9e\u8a00\u3002</p> <p></p>"},{"location":"10.%E9%8C%AF%E8%AA%A4%E8%88%87%E4%BE%8B%E5%A4%96%E8%99%95%E7%90%86/","title":"10.\u932f\u8aa4\u8207\u4f8b\u5916\u8655\u7406","text":""},{"location":"11.%E7%94%A2%E7%94%9F%E5%99%A8/","title":"11.\u7522\u751f\u5668","text":""},{"location":"11.%E7%94%A2%E7%94%9F%E5%99%A8/#generator-with-for-loop","title":"Generator with for loop","text":"<p>\u751f\u6210\u5668\u6703\u4f9d\u64dayield\u4e00\u6b65\u4e00\u6b65\u5f80\u4e0b\u8d70\u76f4\u9047\u5230return\u4e1f\u51faerror\u70ba\u6b62</p> <pre><code># with for loop\ndef generator_example():\n  a = 1\n  yield print(a) # 1\n  a += 1\n  yield print(a) # 2\n  return\n\nfor i in generator_example():\n  continue \n\n# Output:\n1\n2\n</code></pre>"},{"location":"11.%E7%94%A2%E7%94%9F%E5%99%A8/#generator-with-next-avoid-stopiteration-error","title":"Generator with next, avoid StopIteration Error","text":"<p>\u624b\u52d5\u57f7\u884c\u751f\u6210\u5668</p> <pre><code># with next\ndef generator_example():\n  yield print(1)\n  yield print(2)\n  return\ngen = generator_example()\ngen.__next__() # 1\ngen.__next__() # 2\ngen.__next__() # raise StopIteration Error\n</code></pre> <p>\u4f7f\u7528\u4f8b\u5916\u63a5\u53d6\u932f\u8aa4</p> <pre><code># avoid StopIteration Error\ntry:\ngen.__next__()\nexcept StopIteration:\npass # do nothing\n</code></pre>"},{"location":"11.%E7%94%A2%E7%94%9F%E5%99%A8/#benefits-memory-usage","title":"Benefits - Memory Usage","text":"<p>\u751f\u6210\u5668\u7684\u597d\u8655 \u6e1b\u5c11\u8a18\u61b6\u9ad4\u4f7f\u7528\u91cf</p> <pre><code># \u5229\u7528 list \u8fed\u4ee3\nrange_num = 10\nfor i in [x*x for x in range(range_num)]:\n  pass#  do something\n\n# \u5229\u7528 generator \u8fed\u4ee3\nfor i in (x*x for x in range(range_num)):\n  pass# do something\n</code></pre>"},{"location":"11.%E7%94%A2%E7%94%9F%E5%99%A8/#module","title":"Module","text":"<pre><code># A module is a file containing Python definitions and statements.\nimport re\nimport re as r\nfrom re import findall\nfrom re import *\n</code></pre>"},{"location":"11.%E7%94%A2%E7%94%9F%E5%99%A8/#module-os","title":"Module - os","text":"<pre><code>import os\n# \u986f\u793a\u7d55\u5c0d\u8def\u5f91\nos.path.abspath(\"session_1-ans.ipynb\") # '/Users/felix/Python/session_1-ans.ipynb'\n# \u5c07\u591a\u500b\u5b57\u4e32\u7d44\u5408\u70ba\u8def\u5f91\n'/'.join(['path', 'result', 'a.csv']) # 'path/result/a.csv'\n# \u5c07\u591a\u500b\u5b57\u4e32\u7d44\u5408\u70ba\u8def\u5f91\nos.path.join('path', 'result', 'a.csv') # 'path/result/a.csv'\n# \u6aa2\u67e5\u67d0\u8def\u5f91/\u8cc7\u6599\u593e\u662f\u5426\u5b58\u5728\nos.path.exists(\"python\\session_1-ans.ipynb\") # False\n</code></pre>"},{"location":"11.%E7%94%A2%E7%94%9F%E5%99%A8/#test5","title":"Test5","text":"<pre><code>Q1: \u82e5\u67d0 k \u4f4d\u6578\u7684\u6b63\u6574\u6578,\u5176\u6240\u6709\u4f4d\u6578\u6578\u5b57\u7684 k \u6b21\u65b9\u548c\u7b49\u65bc\u8a72\u6578\u76f8\u7b49,\u5247\u7a31\u70ba\u963f\u59c6\u65af\u58ef\u6578 (Armstrong\nnumber)\u3002 \u4f8b\u5982 1^3 + 5^3 + 3^3 = 153, \u5247 153 \u662f\u4e00\u500b\u963f\u59c6\u65af\u58ef\u6578\u3002\n\u8acb\u5275\u5efa\u4e00\u500b Generator \u51fd\u5f0f,\u627e\u51fa 100 ~ 999 \u7684\u6240\u6709\u4e09\u4f4d\u6578\u7684\u963f\u59c6\u65af\u58ef\u6578;\n\u5229\u7528 yield \u56de\u50b3\u6578\u503c,\u4e26\u4e14\u7528\u591a\u6b21\u547c\u53eb\u7684\u65b9\u5f0f,\u4f9d\u5e8f\u5217\u5370\u51fa\u6240\u627e\u5230\u7684\u963f\u59c6\u65af\u58ef\u6578\u3002\n</code></pre> <pre><code>for i in range(100,1000):\n  arr=str(i)\n  ans=int(arr[0])**3+int(arr[1])**3+int(arr[2])**3\n  if ans==i:\n    print(i)\n</code></pre> <pre><code>def armstrong_number():\n  for i in range(100,1000):\n    ans=0\n    temp=i\n    while temp&gt;0:\n      digit=temp%10\n      ans+=digit**3\n      temp//=10\n    if ans==i:\n      yield ans\n\na = armstrong_number()\ntry:\n    while(True):\n        print(a.__next__())\nexcept StopIteration:\n    print(\"The End\")\n</code></pre>"},{"location":"12.%E9%9A%A8%E6%A9%9F%E6%95%B8random/","title":"12.\u96a8\u6a5f\u6578random","text":""},{"location":"13.%E6%95%B8%E5%AD%B8math/","title":"13.\u6578\u5b78math","text":""},{"location":"14.%E6%97%A5%E6%9C%9F%E5%92%8C%E6%99%82%E9%96%93datetime/","title":"14.\u65e5\u671f\u548c\u6642\u9593datetime","text":""},{"location":"15.%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%A4%BA%E5%BC%8Fre/","title":"15.\u6b63\u898f\u8868\u793a\u5f0fre","text":"<pre><code>import re\n\nstring = \"This is demo string, do nothing!\"\npattern = \"is\"\n\n# Return a list of all non-overlapping matches in the string.\nprint(re.findall(pattern, string)) # ['is', 'is']\n</code></pre>"},{"location":"15.%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%A4%BA%E5%BC%8Fre/#find-numbers-letters","title":"find numbers, letters","text":"<pre><code>import re\n# find numbers\npattern = \"[0-9]+\"\nstring = '12 drummers drumming, 111 pipers piping, 1006 lords\na-leaping'\nre.findall(pattern, string) # ['12', '111', '1006']\n# find letters\npattern = \"[cmf]an\"\nstring = 'find: can, man, fan, skip: dan, ran, pan'\nre.findall(pattern, string) # ['can', 'man', 'fan']\n</code></pre>"},{"location":"15.%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%A4%BA%E5%BC%8Fre/#find-e-mail","title":"find e-mail","text":"<pre><code>import re\nemail_text = \"\"\"\nBig Data Analytics/ Deep LearningSocial Computing / Computational Social Science / Crowdsourcing\nMultimediaand Network SystemsQuality of ExperienceInformation SecurityPh.D. candidate at NTU\nEEchihfan02-27883799#1602Camera CalibrationComputer VisionData\nAnalysiscmchang02-27883799#1671System OptimizationMachine LearningyusraBig data\nanalysiscclin02-27883799#1668Data Analysisrusi02-27883799#1668Government Procurement ActFinancial\nManagementkatekuen02-27883799#1602AdministrationEvent Planningseanyu02-27883799#1668Data\nAnalysisPsychology &amp; NeuroscienceMarketingxinchinchenEmbedded Systemkyoyachuan062602-27883799\n#1601FinTechActuarial ScienceData Analysiskai0604602-27883799#1601Data AnalysisMachine\nLearningchloe02-27839427Accountingafun02-27883799 felix2018@iis.sinica.edu.tw\n#1673Data AnalysisWeb developmentyunhsu198902-27883799#1668MarketingTIGP Ph.D. Fellow at Academia Sinica &amp;\nNCCUbaowalyMachine LearningData AnalysisSocial Computingchangyc1427883799#1678\nData Analysisjimmy1592302-2788379 jimmy15923@iis.sinica.com.tw#1688Data AnalysisjasontangAnalysisMachine\nLearninguchen02-27883799#1668Deep Learningpjwu02-27883799#1604Computational PhotographyData Analysis\n\"\"\"\nre.findall(\"([A-Za-z0-9._]+@[A-Za-z.]+[com|edu]\\.tw)\", email_text)\n\n# Output: ['felix2018@iis.sinica.edu.tw', 'jimmy15923@iis.sinica.com.tw']\n</code></pre>"},{"location":"15.%E6%AD%A3%E8%A6%8F%E8%A1%A8%E7%A4%BA%E5%BC%8Fre/#test6","title":"Test6","text":"<pre><code>Q1. \u540c\u6642\u5339\u914d abcdefg, abcde, abc\nQ2. \u540c\u6642\u5339\u914d abc123xyz, abcde22a, abc456aaa\nQ3. \u5339\u914d \"catcat\" (\u5305\u542b \")\nQ4. \u540c\u6642\u5339\u914d wazzzzzup, wazzzup\nQ5. \u540c\u6642\u5339\u914d aaaabcc, aabbbbc, aacc\nQ6. \u5339\u914d\u624b\u6a5f\u865f\u78bc, \u683c\u5f0f\u70ba:0987-654-321\nQ7. \u5339\u914d\u53f3\u65b9\u683c\u5f0f, xxx.xxx.xxx.xxx (\u5176\u4e2d x \u662f 0~9 \u7684\u6578\u5b57)\n</code></pre> <pre><code>Q1. [a-z]*  \nQ2. [a-z]*[0-9]*[a-z]*  \nQ3. \\\"(cat){2}\\\"  \nQ4. wa(z{3}|z{5})up \u6216 waz{3,5}up  \nQ5. [abc]+  \nQ6. [0-9]{4}\\-[0-9]{3}\\-[0-9]{3}  \nQ7. [0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}  \u6216  ([0-9]{1,3}\\.){3}[0-9]{1,3}\n</code></pre>"},{"location":"16.%E6%AA%94%E6%A1%88%E8%99%95%E7%90%86os/","title":"16.\u6a94\u6848\u8655\u7406os","text":""},{"location":"17.Numpy/","title":"17.Numpy","text":"<p>axis=0 \u5217  axis=1 \u884c</p> <pre><code># one axis\n[1, 3, 5] # 3 elements, it has a length of 3.\n\n# 2 axes\n[[ 1, 3, 5],\n[ 2, 4, 6]] # The first axis has a length of 2,\n# the second axis has a length of 3.\n</code></pre>"},{"location":"17.Numpy/#create-ndarray","title":"Create ndarray","text":"<pre><code>import numpy as np\n# create 1 axis array\nx = np.arange(3) # [0, 1, 2]\nprint(type(x)) # &lt;class 'numpy.ndarray'&gt;\n# check if ndarray type\nisinstance(x, np.ndarray) # True\n# be explicitly specified type\ny = np.arange(3, dtype='float64') # [ 0. 1. 2.]\n</code></pre> <pre><code>import numpy as np\nexisted_list = [18, 15, 21, 10, 88, 76, 29, 20]\nnp_array = np.array(existed_list)\nprint(np_array) # [18 15 21 10 88 76 29 20]\n</code></pre>"},{"location":"17.Numpy/#attributes-of-ndarray","title":"Attributes of ndarray","text":"<pre><code>import numpy as np\nx = np.arange(3) # [0, 1, 2]\n# ndim - the number of axes (dimensions) of the array.\nprint(x.ndim) # 1 dim\n# shape - the dimensions of the array.\nprint(x.shape) # (3, )\n# size - the total number of elements of the array.\nprint(x.size) # 3\n# dtype - the type of the elements in the array.\nprint(x.dtype) # int64\n</code></pre>"},{"location":"17.Numpy/#axes-reshape","title":"Axes reshape","text":"<pre><code>x = np.arange(6)\nprint(x) # [0 1 2 3 4 5]\nnew_shape = x.reshape(2, 3)\nprint(new_shape) \n# [[0 1 2]\n# [3 4 5]]\n\n# equivalently\nnew_shape = np.reshape(x, (2, 3))\n# also can be one line to create and reshpae\ny = np.arange(6).reshape(2, 3)\n</code></pre>"},{"location":"17.Numpy/#initial-placeholder-content","title":"Initial placeholder content","text":"<pre><code># np.zeros - full of zeros\nnp.zeros(3) # array([ 0., 0., 0.])\nnp.zeros((2, 3)) # array([[ 0., 0., 0.],\n# [ 0., 0., 0.]])\n# np.ones - full of ones\nnp.ones((2,3)) # array([[ 1., 1., 1.],\n# [ 1., 1., 1.]])\n# np.identity - a square array with ones on the main diagonal\nnp.identity(3) # array([[ 1., 0., 0.],\n# [ 0., 1., 0.],\n# [ 0., 0., 1.]])\n</code></pre>"},{"location":"17.Numpy/#array-index","title":"Array Index","text":"<pre><code>import numpy as np\n# 1-D array\nx = np.arange(6) # array([0, 1, 2, 3, 4, 5])\nx[2] # 2\nx[-2] # 4\n# 2-D array\nx = np.arange(6).reshape(2, 3) #[[0, 1, 2],\n# [3, 4, 5]])\nx[0, 2] # 2\nx[1, -1] # 5\n</code></pre>"},{"location":"17.Numpy/#array-slice-stride-1-d-array","title":"Array Slice &amp; Stride (1-D array)","text":"<pre><code>import numpy as np\nx = np.arange(6) # array([0, 1, 2, 3, 4, 5])\nx[1:5] # [1, 2, 3, 4]\nx[:2] # [0, 1]\nx[1:5:2] # [1, 3]\n</code></pre>"},{"location":"17.Numpy/#array-slice-stride-2-d-array","title":"Array Slice &amp; Stride (2-D array)","text":"<pre><code>import numpy as np\nx = np.arange(6).reshape(2, 3) #[[0, 1, 2],\n# [3, 4, 5]])\nx[0, 0:2] # [0, 1]\nx[:, 1:] # [[1, 2],\n# [4, 5]]\nx[::1, ::2] # [[0, 2],\n# [3, 5]]\n</code></pre>"},{"location":"17.Numpy/#boolean-mask-index","title":"Boolean / Mask Index","text":"<pre><code>import numpy as np\nx = np.arange(6) # array([0, 1, 2, 3, 4, 5])\ncondition = x&lt;3\nx[condition] # [0, 1, 2]\nx[condition] = 0\nx # [0, 0, 0, 3, 4, 5]\n</code></pre>"},{"location":"17.Numpy/#concatenate","title":"Concatenate","text":"<pre><code>import numpy as np\na = np.array([[1, 2, 3], [4, 5, 6]])\nb = np.array([[7, 8, 9]])\nnp.concatenate((a, b), axis=0) # [[1, 2, 3],\n# [4, 5, 6],\n# [7, 8, 9]]\n\nc = [[0], [0]]\nnp.concatenate((a, c), axis=1) # [[1, 2, 3, 0],\n# [4, 5, 6, 0]]\n</code></pre>"},{"location":"17.Numpy/#basic-operations","title":"Basic Operations","text":"<p>\u53ef\u4ee5\u505a\u4e00\u500b\u6216\u5169\u500barray\u7684\u6578\u5b78\u904b\u7b97</p> <pre><code>import numpy as np\na = np.array([[1, 2], [3, 4]])\nb = np.array([[5, 6], [7, 8]])\nprint(a + b) # array([[6, 8], [10, 12]])\nprint(a - b) # array([[-4, -4], [-4, -4]])\nprint(a * b) # array([[5, 12], [21, 32]])\nprint(a / b) # array([[0.2, 0.33333333], [0.42857143, 0.5]]\nprint(a - 1) # array([[0, 1], [2, 3]])\nprint(a * 2) # array([[2, 4], [6, 8]])\n</code></pre>"},{"location":"17.Numpy/#basic-linear-algebra","title":"Basic Linear Algebra","text":"<ul> <li>\u8f49\u7f6e\u77e9\u9663:m * n \u77e9\u9663\u5728\u5411\u91cf\u7a7a\u9593\u4e0a\u8f49\u7f6e\u70ba n * m \u77e9\u9663</li> <li>\u9006\u77e9\u9663:n * n \u77e9\u9663 A \u5b58\u5728\u4e00\u500b n * n \u77e9\u9663 B,\u4f7f\u5f97 AB = BA = I</li> </ul> <pre><code>import numpy as np\na = np.array([[0, 1],[2, 3]])\n\n# \u8f49\u7f6e\u77e9\u9663\nprint(a.T) \n#[[0, 2],\n# [1, 3]]\n\n# \u9006\u77e9\u9663\ninverse = np.linalg.inv(a)\nprint(inverse)\n# [[-1.5, 0.5]\n#   [1, 0]]\n\n# \u5167\u7a4d\nprint(np.dot(a, inverse))\n# [[ 1. 0.]\n#  [ 0. 1.]]\n</code></pre>"},{"location":"17.Numpy/#test","title":"Test","text":"<pre><code>Q1. Create a vector with values ranging from 10 to 49 by np.arange\nQ2. Reverse a vector (first element becomes last)\nQ3. Create a 3x3x3 array with random values by np.random.random\nQ4. Create a 10x10 array with random values and find the minimum and maximum values\nby np.min, np.max\nQ5. Add a border (filled with 0's) around an 3 * 3 matrix with 1 by np.pad\nQ6. Normalize a 5x5 random matrix by divide max number\n</code></pre> <pre><code>#Q1\narr=np.arange(10,50)\nprint(arr)\n#Q2\narr=np.arange(10,50)\narr=arr[::-1]\nprint(arr)\n#Q3\narr=np.random.random((3, 3, 3))\nprint(arr)\n#Q4\narr=np.random.random((10,10))\nprint(arr)\nnp.min(arr)\nnp.max(arr)\n#Q5\narr=np.ones((3,3))\narr=np.pad(arr,pad_width=1, mode='constant', constant_values=0)\nprint(arr)\n#Q6\narr=np.random.random((5,5))\nprint(arr)\nmax=np.max(arr)\narr=arr/max\nprint(arr)\n</code></pre> <pre><code>Q7. Given a 1D array, negate all elements which are between 3 and 8, in place.\nQ8. Extract from the array np.array([3,4,6,10,24,89,45,43,46,99,100]) with Boolean\nmasking all the number:\n(1) which are not divisible by 3\n(2) which are divisible by 5\n(3) which are divisible by 3 and 5\nQ9. Create random vector of size 10 and replace the maximum value by 0 (np.argmax)\nQ10. Create a 5x5 matrix with row values ranging from 0 to 4\n</code></pre> <pre><code>#Q7\narr=np.arange(11)\narr[(3&lt;=arr)&amp;(8&gt;=arr)]*=-1\nprint(arr)\n#Q8\narr=np.array([3,4,6,10,24,89,45,43,46,99,100])\narr1=arr[arr%3!=0]\nprint(arr1)\narr2=arr[arr%5==0]\nprint(arr2)\narr3=arr[(arr%3==0)&amp;(arr%5==0)]\nprint(arr3)\n#Q9\narr=np.random.random(10)\nprint(arr)\narr[arr.argmax()]=0\nprint(arr)\n#Q10\nZ = np.zeros((5, 5))\nZ += np.arange(5)\nprint(Z)\n</code></pre>"},{"location":"17.Numpy/#_1","title":"\u6578\u64da\u62fc\u63a5","text":"<ol> <li>\u65b0\u589e\u8cc7\u6599</li> </ol> <pre><code>a = np.array([[1, 2], [3, 4]])\nb = np.array([[5, 6]])\nnp.concatenate((a, b), axis=0)\n</code></pre> <pre><code>array([[1, 2],\n       [3, 4],\n       [5, 6]])\n</code></pre> <ol> <li>\u65b0\u589e\u6b04\u4f4d</li> </ol> <pre><code>a = np.array([[1, 2], [3, 4]])\nb = np.array([[5, 6]])\nnp.concatenate((a,b.T),axis = 1)\n</code></pre> <pre><code>array([[1, 2, 5],\n       [3, 4, 6]])\n</code></pre>"},{"location":"18.Pandas/","title":"18.Pandas","text":"<p>Why Pandas? - Easy to visualize - Easy to present - Easy to manipulate data as SQL - High-performance containers for data analysis</p> <p>What will you learn ? - How to work with pandas - Exploratory data analysis - statistical &amp; graphical methods - Using pandas to deal with time series data - Time indices, resampling</p>"},{"location":"18.Pandas/#store-data-in-dataframe","title":"Store Data in DataFrame","text":"<ul> <li>method_1</li> </ul> <pre><code>import pandas as pd\ndf = pd.DataFrame({\n'names': ['Bob','Jessica','Mary','John','Mel'],\n'births': [968, 155, 77, 578, 973]\n})\n</code></pre> <ul> <li>method_2</li> </ul> <pre><code>import pandas as pd\n# The inital set of baby names and bith rates\nnames = ['Bob', 'Jessica', 'Mary', 'John', 'Mel', 'Jim']\nbirths = [968, 155, 77, 578, 973, 968 ]\nBabyDataSet = list(zip(names, births))\ndf = pd.DataFrame(BabyDataSet, columns=['Names', 'Births'])\n# \u5c07\u8cc7\u6599\u5132\u5b58\u6210 csv\ndf.to_csv(\"birth_data.csv\", index = True)\n# \u8b80\u53d6 csv\ndf = pd.read_csv(\"birth_data.csv\")\n## \u89c0\u5bdf\u524d\u4e94\u5217\ndf.head()\n</code></pre>"},{"location":"18.Pandas/#work-with-csv","title":"Work With CSV","text":"<p>Check point of CSV file - header - row index - encoding</p>"},{"location":"18.Pandas/#work-with-csv-check-header","title":"Work With CSV - check header","text":"<pre><code>import pandas as pd\ndf = pd.read_csv('birth_data.csv', names=['births', 'names'])\n</code></pre>"},{"location":"18.Pandas/#work-with-csv-check-row-index","title":"Work With CSV - check row index","text":"<pre><code>import pandas as pd\ndf = pd.read_csv('birth_data.csv', index_col=0)\n</code></pre>"},{"location":"18.Pandas/#partial-data","title":"Partial Data","text":"<p>Instead of viewing the whole data, sometimes we just need to check the brief information.</p> <pre><code>df.head(n=5) # top n rows\ndf.tail(n=5) # last n rows\ndf[1:5] # 1 to 4 rows\ndf.sample(5) # random pick n rows\n</code></pre>"},{"location":"18.Pandas/#make-a-dataset","title":"Make a Dataset","text":"<pre><code>import numpy as np\nimport pandas as pd\n# # set seed\nnp.random.seed(111)\n\n# Function to generate test data\ndef CreateDataSet(Number=1):\n    Output = []\n    for i in range(Number):\n        # Create a weekly (mondays) date range\n        rng = pd.date_range(start='1/1/2009', end='12/31/2012', freq='W-MON') #random number generator\n\n        # Create random data\n        data = np.random.randint(low=25, high=1000, size=len(rng))\n\n        # Status pool\n        status = [1,2,3]\n\n        # Make a random list of statuses\n        random_status = [status[np.random.randint(low=0, high=len(status))] for i in range(len(rng))]\n\n        # State pool\n        states = ['GA','FL','fl','NY','NJ','TX']\n\n        # Make a random list of states \n        random_states = [states[np.random.randint(low=0, high=len(states))] for i in range(len(rng))]\n\n        Output.extend(zip(random_states, random_status, data, rng))\n        #extend&amp; append \u5dee\u7570\n\n    return Output\n  ```\n\n  ```py\ndataset = CreateDataSet(4)\ndataset\nlen(dataset) #check shape\ndf = pd.DataFrame(data=dataset, columns=['State','Status','CustomerCount','StatusDate'])\ndf.head(10)\n</code></pre>"},{"location":"18.Pandas/#data-observation","title":"Data Observation","text":"<p>Exploring data with useful method</p> <pre><code>df['State'].unique() # get the set of unique value\ndf['State'].value_counts() # get the counts of each value\ndf.info() # get the brief info\n</code></pre>"},{"location":"18.Pandas/#index-and-select-data","title":"Index and Select Data","text":"<ul> <li>Square brackets</li> <li>Advanced methods</li> <li>loc</li> <li>iloc</li> </ul>"},{"location":"18.Pandas/#column-access","title":"Column Access","text":"<pre><code># DataFrame this would be a DataFrame\ndf[[\"CustomerCount\"]]\ndf[[\"State\",\"Status\"]][1:3]\n# Series this would be a series\ndf[\"CustomerCount\"]\ndf[\"StatusDate\"][100:105]\n</code></pre>"},{"location":"18.Pandas/#index-and-select-data-row-access","title":"Index and Select Data - Row Access","text":"<p>df[2:9] \u2192\u6703\u5370\u51faindex\u70ba2 \u5230 index\u70ba8 \u7684\u503c</p>"},{"location":"18.Pandas/#slicing-with-pandas","title":"Slicing with Pandas","text":"<p>Pandas slicing - DataFrame.loc (label-based) - DataFrame.iloc (integer position-based)</p>"},{"location":"18.Pandas/#slicing-with-pandas-loc","title":"slicing with pandas - loc","text":"<pre><code># select specific row(0 1 2 3)\nprint(df.loc[0:3])\n# subset all row and specific columns\nprint(df.loc[:,[\"State\", \"Status\"]].head())\n# \u53ea\u53d6State\u6b04\u4f4d\nprint(df.loc[0:5,\"State\"])\n</code></pre>"},{"location":"18.Pandas/#slicing-with-pandas-iloc","title":"Slicing with Pandas -iloc","text":"<pre><code># row access(\u5207\u7247\u6240\u4ee5\u53ea\u67090 1 2)\nprint(df.iloc[0:3])\n# subset all row and specific columns\nprint(df.iloc[1:5,[0,1]])\n# \u53ea\u53d6State\u6b04\u4f4d\nprint(df.iloc[:,1].head())\nprint(df.iloc[:,1].head().values)\n</code></pre>"},{"location":"18.Pandas/#conditional-data","title":"Conditional Data","text":"<p>Sometimes, we need to estimate data behavior with given statement</p> <pre><code>df.loc[df.State == 'FL']\n\ndf.loc[(df.State == 'FL') &amp; (df['Status'] == 3)]\n</code></pre>"},{"location":"18.Pandas/#columns-observation","title":"Columns Observation","text":"<p>Intuitively, a column of values is a vector</p> <pre><code>print(df['Status'])\nprint(df['Status'].values)\n</code></pre>"},{"location":"18.Pandas/#generate-a-vector-numerical-operation","title":"Generate a vector - numerical operation","text":"<p>We know we can create a new column by assigning new vector.How about basic numerical operation?</p> <pre><code>print(df['Status'] + 1)\n</code></pre>"},{"location":"18.Pandas/#generate-a-vector-by-function","title":"Generate a vector by function","text":"<p>But we want more than numerical operation. Try functional programming !</p> <pre><code># apply func to each column\nprint(df.apply(len, axis=0))\n\n# apply func to each row\nprint(df.apply(len, axis=1))\n</code></pre>"},{"location":"18.Pandas/#generate-a-vector-by-function_1","title":"Generate a vector by function","text":"<p>Design our own function and do more !</p> <pre><code>def text(x):\n  status = x['Status']\n  return 'correct' if status == 1 else 'error'\ndf['StatusText'] = df.apply(text, axis=1)\n</code></pre>"},{"location":"18.Pandas/#get-the-summary-data-by-group","title":"Get the summary data by group","text":"<p>We just learned how to get the data with condition! e.g. I want to know the total count in each state</p> <pre><code>df2 = df.loc[df['State'] == 'NJ']\ntotal = 0\nfor count in df2['CustomerCount']:\ntotal += count\nprint(total)\n# could we do calculation only once?\n</code></pre>"},{"location":"18.Pandas/#how-to-grouping-data","title":"How to grouping data?","text":"<pre><code># group the data by given column name\ng_state = df.groupby(['State'])\ng_state.size()\n</code></pre>"},{"location":"18.Pandas/#get-the-grouped-dataframe","title":"Get the grouped dataframe","text":"<pre><code># group the data by given column name\ng_state = df.groupby(['State'])\n\n# get the group data\ng_state.get_group('NJ')\n</code></pre>"},{"location":"18.Pandas/#get-the-grouped-data-summary","title":"Get the grouped data summary","text":"<pre><code># group the data by given column name\ng_state = df.groupby(['State'])\n\n# sum all the numerical data\ng_state.sum()\n</code></pre>"},{"location":"18.Pandas/#group-by-multiple-indexes-and-hierarchical","title":"Group by multiple indexes and hierarchical","text":"<pre><code># group the data by given column name\ng_state = df.groupby(\n['StatusDate', 'State'],\nsort=True).sum()\n</code></pre>"},{"location":"18.Pandas/#combine-dataframe","title":"Combine DataFrame","text":"<p>When we try to combine similar Dataframe, we can easily use</p> <pre><code>pd.concat([df1, df2])\n</code></pre>"},{"location":"18.Pandas/#concept-of-joint-dataframe","title":"Concept of Joint Dataframe","text":"<p>When the row and column do not fully match, we have to consider the strategy to merge Dataframe. - LEFT join - RIGHT join - OUTER join - INNER join</p>"},{"location":"18.Pandas/#left-join","title":"Left join","text":"<pre><code>pd.merge(left, right, on=['key1', 'key2'],\nhow='left')\n</code></pre>"},{"location":"18.Pandas/#right-join","title":"Right join","text":"<pre><code>pd.merge(left, right, on=['key1', 'key2'],\nhow='right')\n</code></pre>"},{"location":"18.Pandas/#full-outer-join","title":"Full Outer join","text":"<pre><code>pd.merge(left, right, on=['key1', 'key2'],\nhow='outer')\n</code></pre>"},{"location":"18.Pandas/#inner-join","title":"Inner join","text":"<pre><code>pd.merge(left, right, on=['key1', 'key2'],\nhow='inner')\n</code></pre>"},{"location":"18.Pandas/#pandas","title":"Pandas \u6b04\u4f4d\u540d\u7a31\u6392\u5e8f","text":"<pre><code>data = pd.read_csv('./data.csv')\nnewData=data[sorted(data) ]\n</code></pre>"},{"location":"19.Matplotlib/","title":"19.Matplotlib","text":""},{"location":"19.Matplotlib/#the-iris-data-set","title":"The iris data set","text":"<p>Famous data set in pattern recognition</p> <ul> <li>150 observations, 4 features each<ul> <li>Sepal length</li> <li>Sepal width</li> <li>Petal length</li> <li>Petal width</li> </ul> </li> <li>3 species: setosa, versicolor, virginica</li> </ul> <p>reference: http://scikit-learn.org/stable/datasets/index.html</p>"},{"location":"19.Matplotlib/#load-dataset","title":"Load Dataset","text":"<pre><code>import matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import datasets\nimport pandas as pd\niris = datasets.load_iris() #use dataset offerd by sklearn\n\n# Make a DF\niris_DF = pd.DataFrame(iris.data, columns= iris.feature_names)\niris_DF.head()\n\n# Add Species Columns\niris_DF[\"species\"] = \"temp\"\niris_DF.loc[:49,'species'] = \"setosa\"\niris_DF.loc[50:99,'species'] = \"versicolor\"\niris_DF.loc[100:149,'species'] = \"virginica\"\niris_DF\n\n# \u67e5\u770b\u6bcf\u4e00\u500b\u54c1\u7a2e\u5404\u6709\u5e7e\u500b\niris_DF.groupby(\"species\").size()\n# \u53d6\u5f97\u8a73\u7d30\u540d\u7a31\niris_DF['species'].describe()\n\n# EDA\n# Print summary statistics of the fare column with .describe() \u7b2c\u4e00\u500b\u6b04\u4f4d\u4f7f\u7528iloc\u7684\u5207\u7247\u7d22\u5f15\u503c\nprint(iris_DF.iloc[:,1].describe())\n# Generate a box plot of the fare column\niris_DF.iloc[:,1].plot(kind = \"box\")\n# Show the plot \u756b\u5716\nplt.show()\n\n# \u756b\u51fa\u6240\u6709\u7684Box plot\n## \u4f7f\u7528\u9663\u5217\u547c\u53eb\n## \u505aquantile\u7684EDA\n# Print the 5th and 95th percentiles\nkind = iris_DF.columns              \nq = [0.05,0.25,0.75, 0.95]\nprint(iris_DF[kind].count())\nprint(iris_DF[kind].quantile(q))\n# Generate a box plot\niris_DF[kind].plot(kind='box') #draw all the column\nplt.show()\n\n# Scatter Plot\niris_DF.plot(x = \"petal length (cm)\", y = \"petal width (cm)\", kind = \"scatter\")\niris_DF.plot(x = \"petal length (cm)\", y = \"sepal length (cm)\", kind = \"scatter\", logx= True)\nplt.show()\n</code></pre>"},{"location":"19.Matplotlib/#visual-eda-all-data","title":"Visual EDA: all data","text":"<pre><code># \u89c0\u770b\u5168\u90e8\u8cc7\u6599\u5206\u5e03\u76f4\u65b9\u5716\niris_DF.plot(kind= 'hist', bins=50, range=(0,8), alpha=0.3,\nedgecolor='black')\nplt.title('Entire iris data set')\nplt.xlabel('[cm]')\nplt.figure(figsize=(18, 12), dpi=600)\nplt.show()\n\n# \u89c0\u770b\u67d0\u4e00\u985e\n# visualize setosa data\nsetosa.plot(kind = \"hist\", bins = 50, range = (0,8), alpha = 0.3,\nedgecolor = \"black\")\nplt.title(\"setosa data set\")\nplt.xlabel(\"[cm]\")\nplt.show()\n</code></pre>"},{"location":"8.%E9%A1%9E%E5%88%A5/","title":"8.\u985e\u5225","text":"<pre><code># Attribute references\nclass MyClass:\n  var = 123\n  def method(self):\n    return \"hello world\"\n# Instantiation\nmy_object = MyClass()\n# \u7528 . \u4f86\u8a2a\u554f\u7269\u4ef6\u7684\u5c6c\u6027\u6216\u65b9\u6cd5\nprint(my_object.var) # 123\nprint(my_object.method()) # hello world\n</code></pre>"},{"location":"8.%E9%A1%9E%E5%88%A5/#init-myself","title":"init myself","text":"<pre><code># no arguments\nclass MyClass:\n  def __init__(self):\n    print(\"do nothing\")\nmy_object = MyClass()\n# do nothing\n</code></pre> <p>\u8b8a\u6578\u521d\u59cb\u5316</p> <pre><code># with arguments\nclass MyClass:\n  def __init__(self, var1, var2):\n    self.var1 = var1\n    self.var2 = var2\nmy_object = MyClass(123, 456)\nprint(my_object.var1) # 123\nprint(my_object.var2) # 456\n</code></pre>"},{"location":"8.%E9%A1%9E%E5%88%A5/#example","title":"Example","text":"<pre><code>class Person:\n  bmi = 0.0\n  height = 0.0\n  weight = 0\n  def __init__(self):\n    pass\n  def ask_person_info(self):\n    self.height = float(input(\"What is your height? (meter) : \"))\n    self.weight = int(input(\"What is your weight? (kg) : \"))\n  def cal_BMI(self):\n    self.bmi = round((self.weight / (self.height ** 2)), 2)\n    print(\"Your BMI is \" + str(self.bmi))\n</code></pre>"},{"location":"8.%E9%A1%9E%E5%88%A5/#test7","title":"Test7","text":"<pre><code>Q1. \u5beb\u4e00\u500b Class,\n\u5305\u542b\u4e00\u500b\u8b8a\u6578(str1)\u4ee5\u53ca\u5169\u500b\u51fd\u5f0f(set_string \u548c print_string).\nset_string \u63a5\u53d7\u4e00\u500b\u5b57\u4e32\u53c3\u6578,\u8ce6\u503c\u7d66 str1\u3002\nprint_string \u5370\u51fa str1 \u7684\u5927\u5beb\u5b57\u4e32\nhint: \u5148\u5ba3\u544a\u4e00\u500b\u6210\u54e1\u8b8a\u6578,\u518d\u900f\u904e\u4e0a\u8ff0\u5169\u500b\u51fd\u5f0f\u5c0d\u8a72\u8b8a\u6578\u505a\u64cd\u4f5c\u3002\n</code></pre> <pre><code>class Test7:\n  def __init__(self):\n    self.str1 = \"\"\n  def set_string(self,str1):\n    self.str1=str1\n  def print_string(self):\n    print(self.str1.upper()) \n\nmyClass=Test7()\nmyClass.set_string('hello world')\nmyClass.print_string()\n</code></pre>"},{"location":"9.%E6%A8%A1%E7%B5%84/","title":"9.\u6a21\u7d44","text":""},{"location":"material/","title":"Material","text":"<ul> <li> <p>Python \u662f Pass By Value, Pass by Reference, \u9084\u662f Pass by Sharing\uff1f</p> </li> <li> <p>\u6210\u5927\u9ad8\u5b8f\u5b87\u5be6\u9a57\u5ba4\u57fa\u790e</p> </li> <li>PythonForDataAnalysis \u5de8\u5320\u96fb\u8166</li> <li>hahow</li> <li>\u8ab2\u7a0b\u8a2d\u8a08\u53c3\u8003\uff1aPython \u5165\u9580\u7279\u8a13</li> </ul>"},{"location":"material/#_1","title":"\u74b0\u5883","text":"<ul> <li>AI Python\u74b0\u5883</li> <li>Python Environment \u7e3d\u652c</li> </ul>"},{"location":"material/#_2","title":"\u57fa\u790e\u908f\u8f2f","text":"<ul> <li>Python \u6559\u5b78</li> <li>Python\u7cfb\u5217\u6559\u5b78</li> <li>python</li> </ul>"},{"location":"material/#_3","title":"\u8cc7\u6599\u79d1\u5b78","text":"<ul> <li>Pandas\u57fa\u790e\u5b78\u7fd2\u7b46\u8a18</li> <li>matplotlib\u57fa\u790e\u5b78\u7fd2</li> <li>Python \u5b78\u7fd2\u5730\u5716\u8207\u653b\u7565</li> <li>matplotlib, numpy,  pandas, seaborn\u53c3\u8003</li> <li>numpy,  pandas\u53c3\u8003</li> <li>matplotlib,  pandas, \u74b0\u5883\u53c3\u8003</li> <li>\u6df1\u5ea6\u5b78\u7fd2\u7d20\u6750\u9084\u6709\u57fa\u672cPython numpy pandas</li> </ul>"},{"location":"material/#_4","title":"\u5176\u4ed6","text":"<p>-PyGame</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.1%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E6%8C%87%E5%8D%97/","title":"1.1 \u74b0\u5883\u5b89\u88dd\u6307\u5357","text":"<p>\u5728\u958b\u59cb\u5b78\u7fd2 Python \u4e4b\u524d\uff0c\u5efa\u7acb\u4e00\u500b\u9069\u5408\u7684\u958b\u767c\u74b0\u5883\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u826f\u597d\u7684\u74b0\u5883\u80fd\u5920\u63d0\u5347\u5b78\u7fd2\u6548\u7387\uff0c\u8b93\u60a8\u5c08\u6ce8\u65bc\u7a0b\u5f0f\u8a9e\u8a00\u7684\u5b78\u7fd2\u3002\u672c\u6307\u5357\u5c07\u4ecb\u7d39\u5169\u7a2e\u5e38\u898b\u7684 Python \u64b0\u5beb\u5f62\u5f0f\uff0c\u4ee5\u53ca\u4e0d\u540c\u7684\u74b0\u5883\u5b89\u88dd\u65b9\u5f0f\uff0c\u4f9b\u521d\u5b78\u8005\u53c3\u8003\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.1%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E6%8C%87%E5%8D%97/#python","title":"\u5169\u7a2e\u64b0\u5beb Python \u7684\u5f62\u5f0f","text":""},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.1%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E6%8C%87%E5%8D%97/#py","title":"\u7b2c\u4e00\u7a2e\u65b9\u5f0f\uff1a <code>.py</code> \u6a94","text":"<p><code>.py</code> \u6a94\u662f Python \u7684\u539f\u59cb\u78bc\u6a94\u6848\u683c\u5f0f\uff0c\u4f7f\u7528\u7d14\u6587\u5b57\u7de8\u8f2f\u5668\uff08\u5982 Notepad++\u3001Sublime Text\uff09\u6216\u6574\u5408\u958b\u767c\u74b0\u5883\uff08IDE\uff0c\u5982 PyCharm\u3001Visual Studio Code\uff09\u9032\u884c\u7de8\u5beb\u3002\u64b0\u5beb\u5b8c\u6210\u5f8c\uff0c\u9700\u5728\u7d42\u7aef\u6a5f\u4e2d\u900f\u904e python \u6307\u4ee4\u904b\u884c\u7a0b\u5f0f\u78bc\uff0c\u4e26\u89c0\u5bdf\u57f7\u884c\u7d50\u679c\u3002</p> <p></p> <p>\u4f7f\u7528\u60c5\u5883\uff1a</p> <ul> <li>\u9069\u5408\u64b0\u5beb\u5b8c\u6574\u7684\u61c9\u7528\u7a0b\u5f0f\u6216\u6a21\u7d44\u3002</li> <li>\u65b9\u4fbf\u7ba1\u7406\u5927\u578b\u5c08\u6848\u7684\u7a0b\u5f0f\u78bc\u7d50\u69cb\u3002</li> <li>\u6613\u65bc\u8207\u7248\u672c\u63a7\u5236\u7cfb\u7d71\uff08\u5982 Git\uff09\u6574\u5408\u3002</li> </ul>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.1%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E6%8C%87%E5%8D%97/#jupyter-notebook","title":"\u7b2c\u4e8c\u7a2e\u65b9\u5f0f\uff1a Jupyter Notebook","text":"<p>Jupyter Notebook \u662f\u4e00\u500b\u4e92\u52d5\u5f0f\u7684\u958b\u767c\u74b0\u5883\uff0c\u5141\u8a31\u5c07\u7a0b\u5f0f\u78bc\u3001\u57f7\u884c\u7d50\u679c\u3001\u6587\u5b57\u8aaa\u660e\u548c\u5716\u8868\u6574\u5408\u5728\u540c\u4e00\u500b\u6587\u4ef6\u4e2d\u3002\u5b83\u7684\u6a94\u6848\u683c\u5f0f\u70ba <code>.ipynb</code>\uff0c\u975e\u5e38\u9069\u5408\u7528\u65bc\u8cc7\u6599\u79d1\u5b78\u7684\u958b\u767c\u3002</p> <p></p> <p>\u4f7f\u7528\u60c5\u5883\uff1a</p> <ul> <li>\u975e\u5e38\u9069\u5408\u8cc7\u6599\u5206\u6790\u3001\u6a5f\u5668\u5b78\u7fd2\u548c\u6559\u5b78\u7528\u9014\u3002</li> <li>\u65b9\u4fbf\u9032\u884c\u5373\u6642\u7a0b\u5f0f\u78bc\u57f7\u884c\u548c\u7d50\u679c\u8996\u89ba\u5316\u3002</li> <li>\u6709\u52a9\u65bc\u5206\u4eab\u548c\u5c55\u793a\u5de5\u4f5c\u6d41\u7a0b\u548c\u7d50\u679c\u3002</li> </ul>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.1%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E6%8C%87%E5%8D%97/#_1","title":"\u74b0\u5883\u5b89\u88dd\u65b9\u5f0f","text":"<p>\u5728\u9078\u64c7 Python \u7684\u958b\u767c\u74b0\u5883\u6642\uff0c\u4e3b\u8981\u6709\u5169\u7a2e\u65b9\u5f0f\uff1a\u4f7f\u7528\u96f2\u7aef\u8cc7\u6e90\u6216\u5728\u672c\u6a5f\u96fb\u8166\u4e0a\u5efa\u7f6e Python \u74b0\u5883\u3002\u5c0d\u65bc\u525b\u958b\u59cb\u5b78\u7fd2 Python \u7684\u65b0\u624b\uff0c\u5efa\u8b70\u5148\u4ee5\u514d\u8cbb\u7684\u96f2\u7aef\u670d\u52d9\u70ba\u4e3b\uff0c\u4f8b\u5982 Google Colab\uff0c\u5c07\u91cd\u5fc3\u653e\u5728\u5b78\u7fd2 Python \u7a0b\u5f0f\u8a2d\u8a08\u7684\u57fa\u790e\u3002\u7576\u60a8\u5b78\u7fd2\u5230\u4e00\u5b9a\u968e\u6bb5\u5f8c\uff0c\u518d\u56de\u904e\u982d\u4f86\u8003\u616e\u5728\u672c\u6a5f\u96fb\u8166\u4e0a\u5b89\u88dd Anaconda \u6216 Miniconda\uff0c\u4ee5\u6eff\u8db3\u66f4\u9032\u968e\u7684\u958b\u767c\u9700\u6c42\u3002</p> <ul> <li>\u96f2\u7aef\u8cc7\u6e90<ul> <li>Google Colab\uff08Python\u521d\u5b78\u8005\u53cb\u5584\uff09</li> </ul> </li> <li>\u672c\u6a5f\u96fb\u8166\u5efa\u7f6e Python \u74b0\u5883<ul> <li>Anaconda\uff08\u8cc7\u6599\u79d1\u5b78\u65b0\u624b\u53cb\u5584\uff09</li> <li>Miniconda\uff08\u8cc7\u6df1\u8001\u624b\u9996\u9078\uff09</li> </ul> </li> </ul>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.1%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E6%8C%87%E5%8D%97/#google-colab","title":"Google Colab","text":"<p>Google Colab \u662f Google \u63d0\u4f9b\u7684\u514d\u8cbb\u96f2\u7aef Jupyter Notebook \u670d\u52d9\uff0c\u7121\u9700\u5728\u672c\u6a5f\u5b89\u88dd\u4efb\u4f55\u8edf\u9ad4\uff0c\u5373\u53ef\u5728\u700f\u89bd\u5668\u4e2d\u64b0\u5beb\u548c\u57f7\u884c Python \u7a0b\u5f0f\u3002</p> <p>\u4f7f\u7528\u60c5\u5883\uff1a</p> <ul> <li>\u9069\u5408\u5e0c\u671b\u5feb\u901f\u958b\u59cb\u5b78\u7fd2 Python \u7684\u521d\u5b78\u8005\u3002</li> <li>\u4e0d\u53d7\u9650\u65bc\u672c\u6a5f\u96fb\u8166\u7684\u786c\u9ad4\u8cc7\u6e90\uff0c\u7279\u5225\u9069\u7528\u65bc\u9700\u8981\u5927\u91cf\u8a08\u7b97\u7684\u4efb\u52d9\u3002</li> <li>\u6709\u514d\u8cbb\u984d\u5ea6\u4f7f\u7528 GPU \u904b\u7b97\u8cc7\u6e90</li> <li>\u65b9\u4fbf\u8207\u4ed6\u4eba\u5354\u4f5c\u548c\u5206\u4eab Notebook\u3002</li> </ul>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.1%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E6%8C%87%E5%8D%97/#anaconda","title":"Anaconda","text":"<p>Anaconda \u662f\u4e00\u500b\u958b\u6e90\u7684 Python \u767c\u884c\u7248\u672c\uff0c\u5167\u542b\u5927\u91cf\u7684\u79d1\u5b78\u8a08\u7b97\u548c\u8cc7\u6599\u5206\u6790\u5957\u4ef6\uff0c\u4e26\u9644\u5e36 Conda \u5957\u4ef6\u7ba1\u7406\u5668\u548c\u865b\u64ec\u74b0\u5883\u529f\u80fd\u3002\u9069\u5408\u521d\u5b78\u8005\u5728\u672c\u6a5f\u96fb\u8166\u4e00\u9375\u5feb\u901f\u5efa\u7f6e\u958b\u767c\u6240\u9700\u74b0\u5883\uff0c\u4f46\u7f3a\u9ede\u662f\u5b89\u88dd\u5305\u8f03\u5927\uff0c\u6703\u4f54\u7528\u8f03\u591a\u7684\u786c\u789f\u5bb9\u91cf\u3002</p> <p>\u4f7f\u7528\u60c5\u5883\uff1a</p> <ul> <li>\u9069\u5408\u9700\u8981\u5b8c\u6574\u8cc7\u6599\u79d1\u5b78\u5de5\u5177\u7684\u4f7f\u7528\u8005\u3002</li> <li>\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u7684\u74b0\u5883\u914d\u7f6e\uff0c\u7701\u53bb\u500b\u5225\u5b89\u88dd\u5957\u4ef6\u7684\u9ebb\u7169\u3002</li> <li>\u5305\u542b Spyder\u3001Jupyter Notebook \u7b49\u958b\u767c\u5de5\u5177\u3002</li> </ul>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.1%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E6%8C%87%E5%8D%97/#miniconda","title":"Miniconda","text":"<p>Miniconda \u662f Anaconda \u7684\u7cbe\u7c21\u7248\uff0c\u53ea\u5305\u542b Conda \u5957\u4ef6\u7ba1\u7406\u5668\u548c Python\uff0c\u8b93\u4f7f\u7528\u8005\u53ef\u4ee5\u81ea\u884c\u9078\u64c7\u4e26\u5b89\u88dd\u6240\u9700\u7684\u5957\u4ef6\u3002\u9069\u5408\u5c0d Python \u751f\u614b\u7cfb\u8f03\u70ba\u719f\u6089\u7684\u958b\u767c\u8005\u3002</p> <p>\u4f7f\u7528\u60c5\u5883\uff1a</p> <ul> <li>\u9069\u5408\u5e0c\u671b\u8f15\u91cf\u5316\u5b89\u88dd\u7684\u4f7f\u7528\u8005\u3002</li> <li>\u63d0\u4f9b\u66f4\u5927\u7684\u9748\u6d3b\u6027\uff0c\u81ea\u884c\u7ba1\u7406\u74b0\u5883\u548c\u5957\u4ef6\u3002</li> <li>\u9069\u7528\u65bc\u786c\u789f\u7a7a\u9593\u6709\u9650\u6216\u53ea\u9700\u7279\u5b9a\u5957\u4ef6\u7684\u60c5\u6cc1\u3002</li> </ul>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.1%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E6%8C%87%E5%8D%97/#_2","title":"\u7d50\u8a9e","text":"<p>\u9078\u64c7\u9069\u5408\u7684\u958b\u767c\u74b0\u5883\u80fd\u5920\u5927\u5927\u63d0\u5347\u5728\u5b78\u7fd2 Python \u6642\u7684\u6548\u7387\u548c\u9ad4\u9a57\u3002\u7121\u8ad6\u662f\u4f7f\u7528 .py \u6a94\u9084\u662f Jupyter Notebook\uff0c\u9078\u64c7\u96f2\u7aef\u8cc7\u6e90\u9084\u662f\u672c\u6a5f\u5b89\u88dd\uff0c\u90fd\u53d6\u6c7a\u65bc\u60a8\u7684\u5b78\u7fd2\u9700\u6c42\u548c\u74b0\u5883\u689d\u4ef6\u3002\u63a5\u4e0b\u4f86\u7684\u7ae0\u7bc0\uff0c\u6211\u5011\u5c07\u8a73\u7d30\u4ecb\u7d39\u5404\u7a2e\u74b0\u5883\u7684\u5b89\u88dd\u6b65\u9a5f\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u52a9\u60a8\u9806\u5229\u8e0f\u4e0a Python \u7684\u5b78\u7fd2\u4e4b\u8def\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/","title":"1.2 Google Colab\uff1a\u9069\u5408 Python \u521d\u5b78\u8005\u7684\u96f2\u7aef\u958b\u767c\u74b0\u5883","text":"<p>\u96a8\u8457 Python \u6210\u70ba\u6a5f\u5668\u5b78\u7fd2\u3001\u6578\u64da\u5206\u6790\u548c\u4eba\u5de5\u667a\u6167\u9818\u57df\u7684\u4e3b\u8981\u7de8\u7a0b\u8a9e\u8a00\uff0c\u5982\u4f55\u5feb\u901f\u4e0a\u624b\u4e26\u958b\u59cb\u958b\u767c\u6210\u70ba\u8a31\u591a\u521d\u5b78\u8005\u95dc\u6ce8\u7684\u554f\u984c\u3002\u5c0d\u65bc\u90a3\u4e9b\u4e0d\u60f3\u5728\u672c\u5730\u8a2d\u7f6e\u958b\u767c\u74b0\u5883\u7684\u4eba\u4f86\u8aaa\uff0cGoogle Colaboratory\uff08\u7c21\u7a31 Colab\uff09\u662f\u4e00\u500b\u975e\u5e38\u7406\u60f3\u7684\u89e3\u6c7a\u65b9\u6848\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u662f\u5b8c\u5168\u7684\u521d\u5b78\u8005\uff0c\u5efa\u8b70\u4e00\u958b\u59cb\u5148\u4e0d\u8981\u6025\u8457\u5728\u672c\u5730\u7aef\u67b6\u8a2d\u74b0\u5883\uff0c\u800c\u662f\u5229\u7528\u514d\u8cbb\u7684\u96f2\u7aef\u8cc7\u6e90\u3002\u9019\u6a23\u53ef\u4ee5\u8b93\u4f60\u5c08\u6ce8\u65bc\u5b78\u7fd2 Python\uff0c\u800c\u4e0d\u5fc5\u70ba\u74b0\u5883\u8a2d\u5b9a\u800c\u7169\u60f1\u3002</p> <p></p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/#google-colaboratory","title":"\u4ec0\u9ebc\u662f Google Colaboratory\uff1f","text":"<p>Google Colaboratory \u662f\u4e00\u500b\u514d\u8cbb\u7684\u96f2\u7aef\u7de8\u7a0b\u74b0\u5883\uff0c\u5b83\u57fa\u65bc Jupyter Notebook\uff0c\u8b93\u7528\u6236\u53ef\u4ee5\u5728\u7dda\u7de8\u5beb\u548c\u57f7\u884c Python \u7a0b\u5f0f\uff0c\u7121\u9700\u672c\u5730\u8a2d\u7f6e Python \u74b0\u5883\u3002Colab \u63d0\u4f9b\u5f37\u5927\u7684\u8a08\u7b97\u8cc7\u6e90\uff0c\u5305\u62ec\u514d\u8cbb\u7684 GPU \u548c TPU \u652f\u6301\uff0c\u975e\u5e38\u9069\u5408\u7528\u4f86\u9032\u884c\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u8a13\u7df4\u3001\u6578\u64da\u5206\u6790\u4ee5\u53ca\u5176\u4ed6\u9ad8\u8a08\u7b97\u9700\u6c42\u7684\u5de5\u4f5c\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/#colab","title":"\u70ba\u4ec0\u9ebc Colab \u9069\u5408\u521d\u5b78\u8005\uff1f","text":"<ol> <li> <p>\u514d\u5b89\u88dd\uff1a</p> <ul> <li>Colab \u662f\u57fa\u65bc\u96f2\u7aef\u7684\uff0c\u9019\u610f\u5473\u8457\u4f60\u4e0d\u9700\u8981\u5b89\u88dd\u4efb\u4f55\u8edf\u9ad4\u6216\u9032\u884c\u4efb\u4f55\u8907\u96dc\u7684\u914d\u7f6e\u3002\u53ea\u8981\u6709\u7db2\u9801\u700f\u89bd\u5668\u548c Google \u5e33\u6236\uff0c\u5c31\u80fd\u96a8\u6642\u96a8\u5730\u958b\u59cb\u7de8\u5beb\u7a0b\u5f0f\u3002</li> </ul> </li> <li> <p>\u7c21\u55ae\u6613\u7528\u7684\u754c\u9762\uff1a</p> <ul> <li>Colab \u754c\u9762\u76f4\u89c0\uff0c\u57fa\u65bc Jupyter Notebook \u7684\u5f62\u5f0f\u975e\u5e38\u9069\u5408\u521d\u5b78\u8005\u3002\u4f60\u53ef\u4ee5\u5c07\u7a0b\u5f0f\u78bc\u5206\u6bb5\u7de8\u5beb\u3001\u57f7\u884c\uff0c\u4e26\u5373\u6642\u770b\u5230\u7d50\u679c\u3002\u540c\u6642\u9084\u652f\u6301\u6587\u5b57\u3001\u5716\u7247\u3001\u6578\u64da\u8868\u683c\u7684\u5c55\u793a\uff0c\u4fbf\u65bc\u7de8\u5beb\u6559\u5b78\u7b46\u8a18\u6216\u8aaa\u660e\u6587\u4ef6\u3002</li> </ul> </li> <li> <p>\u5373\u6642\u57f7\u884c\u7d50\u679c\uff1a</p> <ul> <li>\u4f60\u53ef\u4ee5\u5728 Notebook \u4e2d\u5206\u6bb5\u57f7\u884c\u7a0b\u5f0f\u78bc\uff0c\u770b\u5230\u5373\u6642\u7d50\u679c\uff0c\u9019\u5c0d\u65bc\u5b78\u7fd2\u548c\u7406\u89e3 Python \u8a9e\u6cd5\u548c\u6a5f\u5668\u5b78\u7fd2\u6982\u5ff5\u975e\u5e38\u6709\u5e6b\u52a9\u3002\u5373\u4f7f\u7a0b\u5f0f\u78bc\u51fa\u932f\uff0c\u4f60\u4e5f\u53ef\u4ee5\u53ea\u4fee\u6539\u90a3\u4e00\u5c0f\u6bb5\uff0c\u518d\u6b21\u57f7\u884c\u5373\u53ef\uff0c\u7121\u9700\u91cd\u65b0\u904b\u884c\u6574\u500b\u7a0b\u5f0f\u3002</li> </ul> </li> <li> <p>\u652f\u63f4 GPU/TPU\uff1a</p> <ul> <li>\u5c0d\u65bc\u9700\u8981\u5927\u91cf\u8a08\u7b97\u8cc7\u6e90\u7684\u4efb\u52d9\uff0c\u5982\u8a13\u7df4\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\uff0cColab \u63d0\u4f9b\u514d\u8cbb\u7684 GPU \u548c TPU \u8cc7\u6e90\uff0c\u9019\u5c0d\u65bc\u672c\u5730\u7121\u6cd5\u63d0\u4f9b\u8db3\u5920\u8a08\u7b97\u80fd\u529b\u7684\u521d\u5b78\u8005\u4f86\u8aaa\uff0c\u662f\u975e\u5e38\u5be6\u7528\u7684\u529f\u80fd\u3002</li> </ul> </li> <li> <p>\u8207 Google \u96f2\u7aef\u786c\u789f\u6574\u5408\uff1a</p> <ul> <li>Colab \u8207 Google \u96f2\u7aef\u786c\u789f\u7121\u7e2b\u6574\u5408\uff0c\u4f60\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b58\u5132\u548c\u7ba1\u7406 Notebook\uff0c\u96a8\u6642\u5f9e\u96f2\u7aef\u6253\u958b\u3001\u4fee\u6539\u3001\u5206\u4eab\u4f60\u7684\u5c08\u6848\u3002</li> </ul> </li> </ol>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/#colab_1","title":"Colab \u7684\u5e38\u898b\u61c9\u7528\u5834\u666f","text":"<ol> <li> <p>Python \u8a9e\u6cd5\u5b78\u7fd2\uff1a</p> <ul> <li>\u521d\u5b78\u8005\u53ef\u4ee5\u5229\u7528 Colab \u5be6\u6642\u5b78\u7fd2\u548c\u57f7\u884c Python \u8a9e\u6cd5\uff0c\u5f9e\u7c21\u55ae\u7684\u6578\u64da\u7d50\u69cb\u3001\u689d\u4ef6\u8a9e\u53e5\u3001\u8ff4\u5708\u5230\u51fd\u6578\uff0c\u9010\u6b65\u638c\u63e1\u7de8\u7a0b\u6280\u80fd\u3002</li> </ul> </li> <li> <p>\u8cc7\u6599\u5206\u6790\u8207\u8996\u89ba\u5316\uff1a</p> <ul> <li>Colab \u652f\u6301\u591a\u7a2e Python \u6578\u64da\u5206\u6790\u5eab\uff0c\u5982 Pandas\u3001NumPy\u3001Matplotlib \u7b49\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 Colab \u9032\u884c\u6578\u64da\u6e05\u7406\u3001\u8655\u7406\u548c\u53ef\u8996\u5316\uff0c\u4e26\u5373\u6642\u67e5\u770b\u5206\u6790\u7d50\u679c\u3002</li> </ul> </li> <li> <p>\u6a5f\u5668\u5b78\u7fd2\u8207\u6df1\u5ea6\u5b78\u7fd2\u5be6\u9a57\uff1a</p> <ul> <li>\u5c0d\u65bc\u90a3\u4e9b\u60f3\u9032\u884c\u6a5f\u5668\u5b78\u7fd2\u6216\u6df1\u5ea6\u5b78\u7fd2\u7684\u521d\u5b78\u8005\uff0cColab \u63d0\u4f9b\u4e86 TensorFlow\u3001Keras \u7b49\u6846\u67b6\u7684\u652f\u6301\u3002\u4f60\u53ef\u4ee5\u5229\u7528\u5176\u5f37\u5927\u7684 GPU \u8cc7\u6e90\uff0c\u9032\u884c\u6a21\u578b\u8a13\u7df4\u548c\u6e2c\u8a66\uff0c\u800c\u4e0d\u9700\u8981\u6602\u8cb4\u7684\u786c\u9ad4\u8a2d\u5099\u3002</li> </ul> </li> <li> <p>\u6559\u5b78\u8207\u5c55\u793a\uff1a</p> <ul> <li>Colab \u652f\u6301\u5728 Notebook \u4e2d\u5d4c\u5165\u6587\u5b57\u8aaa\u660e\u3001\u5716\u7247\u548c\u7a0b\u5f0f\u78bc\uff0c\u975e\u5e38\u9069\u5408\u7528\u4f86\u64b0\u5beb\u6559\u5b78\u7b46\u8a18\u6216\u9032\u884c\u5be6\u4f5c\u6f14\u793a\u3002</li> </ul> </li> </ol>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/#colab_2","title":"\u5982\u4f55\u958b\u59cb\u4f7f\u7528 Colab\uff1f","text":"<p>\u9996\u5148\u958b\u555f Chrome \u700f\u89bd\u5668(\u63a8\u85a6)\uff0c\u63a5\u8457\u767b\u9304\u4f60\u7684 Google \u5e33\u6236\u3002\u9019\u88e1\u63d0\u4f9b\u4e00\u500b\u7bc4\u4f8b\u7a0b\u5f0f\uff0c\u5927\u5bb6\u53ef\u4ee5\u4f9d\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff0c\u4e26\u5c07\u526f\u672c\u4fdd\u5b58\u5230\u81ea\u5df1\u7684\u96f2\u7aef\u786c\u789f\u4e2d\u3002\u9019\u6a23\u4f60\u5c31\u53ef\u4ee5\u81ea\u7531\u5730\u4fee\u6539\u7a0b\u5f0f\uff0c\u4e26\u4fdd\u5b58\u4f60\u7684\u7a0b\u5f0f\u78bc\u3002</p> <p></p> <p>\u5c07\u7bc4\u4f8b\u7a0b\u5f0f\u526f\u672c\u5230\u81ea\u5df1\u7684\u96f2\u7aef\u786c\u789f\u5f8c\uff0c\u7a0b\u5f0f\u78bc\u5c07\u6703\u81ea\u52d5\u4fdd\u5b58\u5230\u4f60\u7684\u96f2\u7aef\u786c\u789f\u4e2d\u7684 Colab Notebooks \u8cc7\u6599\u593e\u5e95\u4e0b\uff0c\u5982\u5716\u7247\u6240\u793a\u3002\u4f60\u53ef\u4ee5\u96a8\u6642\u5728\u9019\u500b\u8cc7\u6599\u593e\u5167\u627e\u5230\u4f60\u7684\u5c08\u6848\uff0c\u4e26\u9032\u884c\u4fee\u6539\u548c\u904b\u884c\u3002</p> <p></p> <p>\u5728 Google Colaboratory \u4e2d\uff0c\u9810\u8a2d\u7684\u904b\u7b97\u8cc7\u6e90\u662f\u4f7f\u7528 CPU\u3002\u5982\u679c\u4f60\u7684\u5c08\u6848\u9700\u8981\u66f4\u9ad8\u7684\u8a08\u7b97\u80fd\u529b\uff0c\u4f8b\u5982\u8a13\u7df4\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\uff0c\u53ef\u80fd\u6703\u9700\u8981\u4f7f\u7528\u5230 GPU \u6216 TPU\u3002\u9996\u5148\uff0c\u9ede\u9078\u9802\u90e8\u9078\u55ae\u4e2d\u7684 Runtime\uff08\u57f7\u884c\u968e\u6bb5\uff09\u3002 \u63a5\u8457\uff0c\u9078\u64c7 Change runtime type\uff08\u66f4\u6539\u57f7\u884c\u968e\u6bb5\u985e\u578b\uff09\u3002 \u5728\u5f48\u51fa\u7684\u8a2d\u5b9a\u8996\u7a97\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5c07 Hardware accelerator\uff08\u786c\u9ad4\u52a0\u901f\u5668\uff09 \u8a2d\u5b9a\u70ba GPU \u6216 TPU\u3002 \u8a2d\u5b9a\u5b8c\u6210\u5f8c\uff0c\u9ede\u64ca Save\uff08\u4fdd\u5b58\uff09\uff0c\u9019\u6a23\u5c31\u53ef\u4ee5\u958b\u59cb\u4f7f\u7528 GPU \u6216 TPU \u9032\u884c\u8a08\u7b97\u3002</p> <p></p> <p>Note</p> <p>\u5728 Google Colaboratory \u4e2d\uff0cGPU \u548c TPU \u904b\u7b97\u8cc7\u6e90\u662f\u514d\u8cbb\u63d0\u4f9b\u7684\uff0c\u4f46\u6709\u4e00\u5b9a\u7684\u4f7f\u7528\u9650\u5236\u548c\u914d\u984d\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/#gpu-tpu","title":"\u514d\u8cbb\u4f7f\u7528 GPU \u548c TPU \u7684\u914d\u984d","text":"<ol> <li> <p>GPU\uff1a</p> <ul> <li>Colab \u63d0\u4f9b Tesla K80\u3001T4 \u7b49\u985e\u578b\u7684 GPU \u4f9b\u7528\u6236\u4f7f\u7528\u3002</li> <li>\u514d\u8cbb\u7528\u6236\u6bcf\u5929\u7684\u4f7f\u7528\u6642\u9593\u9650\u5236\u7d04\u70ba 12 \u5c0f\u6642\uff08\u5177\u9ad4\u4f7f\u7528\u6642\u9593\u6703\u96a8\u8457\u7cfb\u7d71\u8ca0\u8f09\u60c5\u6cc1\u8abf\u6574\uff09\u3002</li> <li>\u9023\u7e8c\u4f7f\u7528 GPU \u8d85\u904e\u4e00\u5b9a\u6642\u9593\u5f8c\uff0c\u53ef\u80fd\u9700\u8981\u9593\u9694\u4e00\u6bb5\u6642\u9593\u518d\u7e7c\u7e8c\u4f7f\u7528\u3002</li> </ul> </li> <li> <p>TPU\uff1a</p> <ul> <li>TPU \u4e3b\u8981\u7528\u65bc\u52a0\u901f\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u8a13\u7df4\uff0c\u5982\u4f7f\u7528 TensorFlow \u548c Keras\u3002</li> <li>\u514d\u8cbb\u7528\u6236\u540c\u6a23\u4eab\u6709\u4e00\u5b9a\u6642\u9593\u7684 TPU \u4f7f\u7528\u914d\u984d\uff0c\u901a\u5e38\u8207 GPU \u985e\u4f3c\uff0c\u6bcf\u5929\u6709\u6578\u5c0f\u6642\u7684\u9650\u5236\u3002</li> </ul> </li> </ol> <p>\u6ce8\u610f\u4e8b\u9805</p> <ol> <li>Colab \u7684\u514d\u8cbb\u8cc7\u6e90\u662f\u6839\u64da\u7528\u6236\u7684\u9700\u6c42\u52d5\u614b\u5206\u914d\u7684\uff0c\u56e0\u6b64\u5982\u679c\u67d0\u4e9b\u6642\u9593\u9ede\u7cfb\u7d71\u8cc7\u6e90\u5403\u7dca\uff0c\u4f7f\u7528\u6642\u9593\u53ef\u80fd\u6703\u7e2e\u77ed\u3002</li> <li>\u5982\u679c\u9700\u8981\u66f4\u591a\u7684\u8a08\u7b97\u8cc7\u6e90\u6216\u7a69\u5b9a\u7684 GPU/TPU \u4f7f\u7528\u6642\u9593\uff0c\u53ef\u4ee5\u8003\u616e\u5347\u7d1a\u5230 Colab Pro \u6216 Colab Pro+\uff0c\u9019\u6703\u63d0\u4f9b\u66f4\u9577\u7684\u904b\u7b97\u6642\u9593\u3001\u66f4\u5feb\u7684 GPU/TPU \u4ee5\u53ca\u66f4\u5927\u7684 RAM \u5bb9\u91cf\u3002</li> </ol>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/#colab-notebook","title":"Colab Notebook\u74b0\u5883\u4ecb\u7d39","text":"<p>Google Colab \u662f\u4e00\u500b\u975e\u5e38\u65b9\u4fbf\u4e14\u6613\u65bc\u4e0a\u624b\u7684\u958b\u767c\u74b0\u5883\uff0c\u7279\u5225\u9069\u5408\u521d\u5b78\u8005\u9032\u884c Python \u958b\u767c\u3002\u60f3\u8981\u5efa\u7acb\u4e00\u500b\u65b0\u7684\u7a7a\u767d\u5c08\u6848\u6642\uff0c\u53ea\u9700\u5728 Google Colab \u9ede\u64ca\u300c\u65b0\u5efa\u7b46\u8a18\u672c\u300d\u5373\u53ef\u5275\u5efa\u4e00\u500b\u65b0\u7684 Jupyter Notebook\uff0c\u958b\u59cb\u4f60\u7684 Python \u958b\u767c\u3002\u4e0d\u9700\u8981\u5b89\u88dd\u4efb\u4f55\u8edf\u9ad4\uff0c\u53ea\u8981\u6709\u700f\u89bd\u5668\u548c\u7db2\u8def\u9023\u7dda\uff0c\u5c31\u80fd\u8f15\u9b06\u4f7f\u7528\u3002</p> <p>\u7576\u4f60\u9032\u5165 Colab \u4ecb\u9762\u5f8c\uff0c\u4f60\u6703\u770b\u5230\u4ee5\u4e0b\u5e7e\u500b\u4e3b\u8981\u7684\u64cd\u4f5c\u5340\u57df\uff1a</p> <ol> <li>\u6a94\u6848\u540d\u7a31\uff1a\u986f\u793a\u76ee\u524d\u958b\u555f\u7684\u6a94\u6848\u540d\u7a31\u3002</li> <li>\u5de5\u5177\u5217\uff1a\u5305\u542b\u5404\u7a2e\u529f\u80fd\u9078\u9805\uff0c\u5982\u6a94\u6848\u3001\u7de8\u8f2f\u3001\u6aa2\u8996\u3001\u57f7\u884c\u7b49\u3002</li> <li>\u5074\u908a\u5de5\u5177\u6b04\uff1a\u63d0\u4f9b\u5feb\u901f\u5b58\u53d6\u529f\u80fd\uff0c\u5982\u6a94\u6848\u7ba1\u7406\u548c\u7a0b\u5f0f\u78bc\u7247\u6bb5\u3002</li> <li>\u5132\u5b58\u683c (Cell)\uff1a\u986f\u793a\u4e26\u57f7\u884c\u7a0b\u5f0f\u78bc\u7684\u5340\u57df\u3002</li> <li>\u5132\u5b58\u683c\u5de5\u5177\u5217\uff1a\u5132\u5b58\u683c\u5c08\u5c6c\u7684\u64cd\u4f5c\u6309\u9215\uff0c\u5982\u57f7\u884c\u3001\u79fb\u52d5\u3001\u8a2d\u5b9a\u7b49\u529f\u80fd\u3002</li> <li>\u9023\u7dda\u72c0\u614b\uff1a\u986f\u793a\u76ee\u524d\u7684\u9023\u7dda\u72c0\u614b\u3002</li> <li>\u7559\u8a00\u8207\u5171\u7528\uff1a\u63d0\u4f9b\u7559\u8a00\u8207\u5171\u7528\u529f\u80fd\u7684\u9078\u9805\u3002</li> </ol> <p></p> <p>Note</p> <p>\u958b\u555f Notebook \u5f8c\uff0c\u7b2c\u4e00\u500b\u6b65\u9a5f\u662f\u9ede\u64ca\u9023\u7dda(Connect)\u4ee5\u914d\u7f6e\u5c08\u6848\u6240\u9700\u7684\u904b\u7b97\u8cc7\u6e90\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/#_1","title":"\u57fa\u672c\u5143\u7d20","text":"<p>\u5728 Google Colaboratory\uff08Colab\uff09\u4e2d\uff0ccell \u662f Jupyter Notebook \u7684\u57fa\u672c\u55ae\u4f4d\uff0c\u6bcf\u500b cell \u90fd\u53ef\u4ee5\u5305\u542b\u7a0b\u5f0f\u78bc\u6216\u6587\u5b57\u3002Colab \u7684 Notebook \u4e3b\u8981\u7531\u5169\u5927\u5143\u7d20\u7d44\u6210\uff1aCode\uff08\u7a0b\u5f0f\u78bc\uff09cell \u548c Text\uff08\u6587\u5b57\uff09cell\u3002</p> <p></p> <p>Code\uff08\u7a0b\u5f0f\u78bc\uff09cell\uff1a</p> <p>Code cell \u7528\u4f86\u7de8\u5beb\u548c\u57f7\u884c Python \u7a0b\u5f0f\u78bc\u3002\u7576\u4f60\u5728\u9019\u500b cell \u4e2d\u8f38\u5165\u7a0b\u5f0f\u78bc\u4e26\u904b\u884c\u5f8c\uff0cColab \u6703\u5373\u6642\u57f7\u884c\u8a72\u7a0b\u5f0f\uff0c\u4e26\u5728\u4e0b\u65b9\u986f\u793a\u904b\u884c\u7d50\u679c\u3002\u9019\u8b93\u4f60\u80fd\u5920\u5373\u6642\u6e2c\u8a66\u7a0b\u5f0f\u78bc\uff0c\u65b9\u4fbf\u9032\u884c\u958b\u767c\u548c\u5b78\u7fd2\u3002</p> <p></p> <p>Note</p> <p>\u53ef\u4ee5\u76f4\u63a5\u5728\u7a0b\u5f0f\u5340\u584a\u4e2d\u8f38\u5165 Python \u7a0b\u5f0f\u78bc\uff0c\u4e26\u6309\u4e0b Shift + Enter \u9375\u57f7\u884c\u7a0b\u5f0f\uff0c\u53c8\u6216\u662f\u9ede\u9078\u6bcf\u500bcell\u5de6\u5074\u57f7\u884c\u6309\u9215\uff0c\u57f7\u884c\u4e26\u5373\u6642\u67e5\u770b\u904b\u884c\u7d50\u679c\u3002</p> <p>Text\uff08\u6587\u5b57\uff09cell\uff1a</p> <p>Text cell \u7528\u4f86\u64b0\u5beb\u8aaa\u660e\u3001\u63cf\u8ff0\u6216\u6a19\u8a3b\uff0c\u652f\u63f4\u4f7f\u7528 Markdown \u8a9e\u6cd5\u9032\u884c\u6392\u7248\u3002\u9019\u8b93\u4f60\u80fd\u5920\u5728 Notebook \u4e2d\u6e05\u6670\u5730\u8a18\u9304\u7a0b\u5f0f\u908f\u8f2f\u3001\u6b65\u9a5f\u6216\u6559\u5b78\u5167\u5bb9\uff0c\u8b93\u7a0b\u5f0f\u548c\u8aaa\u660e\u53ef\u4ee5\u878d\u5408\u5728\u4e00\u8d77\uff0c\u4fbf\u65bc\u6559\u5b78\u548c\u5171\u4eab\u3002</p> <p></p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/#google-drive","title":"\u9023\u52d5 Google Drive","text":"<p>\u7531\u65bc Colab \u662f Google \u7684\u670d\u52d9\uff0c\u56e0\u6b64\u5b83\u80fd\u5920\u65b9\u4fbf\u5730\u8207 Google \u96f2\u7aef\u786c\u789f\u6574\u5408\uff0c\u8b93\u4f60\u53ef\u4ee5\u8f15\u9b06\u5730\u5728 Colab \u4e2d\u65b0\u589e\u3001\u522a\u9664\u6216\u4fee\u6539\u6a94\u6848\u3002\u53ea\u9700\u7c21\u55ae\u5e7e\u6b65\uff0c\u5373\u53ef\u5c07 Colab \u8207 Google Drive \u9023\u52d5\uff1a</p> <ol> <li> <p>\u639b\u63a5\u96f2\u7aef\u786c\u789f\uff1a\u9ede\u64ca Colab \u5de6\u5074\u7684\u6309\u9215\uff0c\u9078\u64c7\u9023\u52d5 Google \u96f2\u7aef\u786c\u789f\uff0c\u9019\u6a23\u5c31\u53ef\u4ee5\u958b\u59cb\u9032\u884c\u6a94\u6848\u7684\u5b58\u53d6\u3002</p> </li> <li> <p>\u958b\u555f\u6b0a\u9650\uff1a\u9ede\u64ca\u6309\u9215\u5f8c\uff0c\u6703\u5f48\u51fa\u4e00\u500b\u8981\u6c42\u6388\u6b0a\u7684\u8996\u7a97\uff0c\u9ede\u9078\u300c\u9023\u7dda\u81f3 Google \u96f2\u7aef\u786c\u789f\u300d\uff0c\u5141\u8a31 Colab \u5b58\u53d6\u4f60\u7684\u96f2\u7aef\u786c\u789f\u8cc7\u6599\u3002</p> </li> <li> <p>\u78ba\u8a8d\u639b\u63a5\u6210\u529f\uff1a\u5728\u5de6\u5074\u6e05\u55ae\u4e2d\u770b\u5230 Google \u96f2\u7aef\u786c\u789f\u7684\u8cc7\u6599\u593e\u5f8c\uff0c\u8868\u793a Colab \u5df2\u7d93\u6210\u529f\u9023\u63a5\uff0c\u73fe\u5728\u53ef\u4ee5\u958b\u59cb\u5728 Notebook \u4e2d\u64cd\u4f5c\u96f2\u7aef\u786c\u789f\u7684\u6a94\u6848\u3002</p> </li> <li> <p>\u6e2c\u8a66\u9023\u52d5\uff1a\u4f60\u53ef\u4ee5\u5c07\u4ee5\u4e0b\u7a0b\u5f0f\u78bc\u8cbc\u5165 Colab\uff0c\u57f7\u884c\u5f8c\u6703\u5728\u96f2\u7aef\u786c\u789f\u7684 Colab Notebooks \u8cc7\u6599\u593e\u4e2d\u5275\u5efa\u4e00\u500b\u540d\u70ba test.txt \u7684\u6587\u4ef6\uff0c\u5167\u5bb9\u662f\u300cHello Google Drive!\u300d\uff1a</p> </li> </ol> <p></p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/#_2","title":"\u5c0f\u7d50","text":"<p>Google Colaboratory \u662f\u4e00\u500b\u9069\u5408 Python \u521d\u5b78\u8005\u7684\u7406\u60f3\u5de5\u5177\uff0c\u7121\u9700\u914d\u7f6e\u672c\u5730\u958b\u767c\u74b0\u5883\uff0c\u7c21\u55ae\u6613\u7528\u4e14\u5177\u5099\u5f37\u5927\u7684\u96f2\u7aef\u8a08\u7b97\u8cc7\u6e90\u3002\u7121\u8ad6\u662f\u5b78\u7fd2 Python \u57fa\u790e\u3001\u9032\u884c\u6578\u64da\u5206\u6790\uff0c\u9084\u662f\u6df1\u5165\u63a2\u7d22\u6a5f\u5668\u5b78\u7fd2\u9818\u57df\uff0cColab \u90fd\u80fd\u6eff\u8db3\u4f60\u7684\u9700\u6c42\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5b8c\u5168\u514d\u8cbb\uff0c\u8b93\u6bcf\u500b\u4eba\u90fd\u80fd\u8f15\u9b06\u5165\u9580 Python \u7de8\u7a0b\u8207 AI \u958b\u767c\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.2Google%20Colab%E4%BB%8B%E7%B4%B9/#_3","title":"\u5ef6\u4f38\u95b1\u8b80","text":"<ul> <li>\u514d\u8cbb\u96f2\u7aefJupyter Notebook\u5831\u4f60\u77e5</li> </ul>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.3Anaconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/","title":"1.3 Anaconda\u4ecb\u7d39\u8207\u5b89\u88dd\uff1a\u9069\u5408\u8cc7\u6599\u79d1\u5b78\u65b0\u624b","text":"<p>\u8fd1\u5e7e\u5e74\u5c0d\u65bc\u5927\u6578\u64da\u5206\u6790\u7814\u7a76\u975e\u5e38\u706b\u7d05\uff0c\u76f8\u5c0d\u7684\u5206\u6790\u5e73\u53f0\u76f8\u5c0d\u7684\u91cd\u8981\u3002\u5728\u8cc7\u6599\u5206\u6790\u88e1\u9664\u4e86\u7528 R \u8a9e\u8a00\uff0c\u53ef\u4ee5\u4f7f\u7528 python \u4f5c\u70ba\u8cc7\u6599\u7684\u5206\u6790\u5de5\u5177\uff0c\u4eca\u5929\u5c31\u8981\u4f86\u4ecb\u7d39 Anaconda \uff0c\u63d0\u4f9b\u7684\u8edf\u9ad4\u5305\u7ba1\u7406\u670d\u52d9\u5e6b\u4f60\u7ba1\u7406\u6240\u6709 Python \u5957\u4ef6\uff0c\u6b64\u5916 Anaconda \u4e2d\u63d0\u4f9b Jupyter Notebook\uff0c\u5b83\u7684\u4ecb\u9762\u7c21\u55ae\u4e26\u4e14\u53ef\u4ee5\u9010\u884c\u57f7\u884c Python \u7a0b\u5f0f\u4e26\u4e14\u99ac\u4e0a\u89c0\u770b\u57f7\u884c\u7d50\u679c\uff0c\u6b64\u5916\u5728\u88e1\u9762\u4e5f\u80fd\u64b0\u5beb Markdown \u53ef\u4ee5\u4e00\u7de8\u64b0\u5beb\u7a0b\u5f0f\u4e00\u908a\u64b0\u5beb\u6d41\u7a0b\u8a3b\u89e3\u3002</p> <p></p> <p>\u6eab\u99a8\u63d0\u9192</p> <p>\u5982\u679c\u4f60\u662fPython\u5c0f\u767d\uff0c\u5efa\u8b70\u53ef\u4ee5\u5148\u4f7f\u7528\u96f2\u7aefColab\u5b78\u7fd2\u57fa\u672c\u8a9e\u6cd5\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.3Anaconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#anaconda","title":"\u5b89\u88dd Anaconda","text":"<p>\u9032\u5165 Anaconda \u5b98\u7db2\u5f8c\u9078\u53d6\u4f60\u7684\u7cfb\u7d71\uff0c\u4e26\u4e0b\u8f09\u5b89\u88dd\u6a94\u3002\u82e5\u672c\u8eab\u6709\u5b89\u88dd Python \u7684\u670b\u53cb\u5efa\u8b70\u5148\u79fb\u9664\u539f\u5148\u6240\u5b89\u88dd\u7684 Python \u56e0\u70ba\u5b89\u88dd Anaconda \u6642\u6703\u81ea\u52d5\u53e6\u5916\u5e6b\u4f60\u5b89\u88dd Python\u3002\u56e0\u6b64\u70ba\u4e86\u907f\u514d\u885d\u7a81\u9084\u662f\u5efa\u8b70\u8b80\u8005\u5148\u79fb\u9664\u820a\u6709\u7248\u672c\u3002</p> <p></p> <p>\u9019\u908a\u4ee5 windows10 \u7cfb\u7d71\u505a\u793a\u7bc4\uff0c\u57fa\u672c\u4e0a\u4e00\u76f4\u9ede\u9078\u4e0b\u4e00\u6b65\u9078\u53d6\u9810\u8a2d\u5b89\u88dd\u5373\u53ef\u3002</p> <p></p> <p></p> <p>\u5b89\u88dd\u5b8c\u6210\u5f8c\u53ef\u4ee5\u958b\u555f\u547d\u4ee4\u63d0\u793a\u5b57\u5143(CMD)\u6216\u662f\u5728 Windows \u641c\u5c0b\u6b04\u8f38\u5165 Anaconda Powershell Prompt \u958b\u555f Anaconda \u5c08\u5c6c\u7684\u7d42\u7aef\u6a5f\u3002\u958b\u555f\u5f8c\u8f38\u5165 python \u67e5\u770b\u662f\u5426\u6709\u6210\u529f\u5b89\u88dd\u597d Python \u4ee5\u53ca Anaconda\u3002\u82e5\u6709\u5b89\u88dd\u6210\u529f\u5247\u6703\u8ddf\u4e0b\u5716\u4e00\u6a23\u7684\u7d50\u679c\u3002\u9032\u5165\u9019\u500b\u756b\u9762\u5f8c\u4f7f\u7528\u8005\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u7d42\u7aef\u6a5f\u64b0\u5beb Python \u7a0b\u5f0f\u8a9e\u8a00\u4e26\u7acb\u5373\u57f7\u884c\u6210\u679c\u3002</p> <p></p> <p>\u4e00\u5207\u5c31\u7dd2\u5f8c\u5c31\u53ef\u4ee5\u555f\u52d5 Anaconda \u56c9\uff01</p> <p></p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.4Miniconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/","title":"1.4 Miniconda\u4ecb\u7d39\u8207\u5b89\u88dd\uff1a\u9069\u5408\u8cc7\u6df1\u8001\u624b","text":""},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.4Miniconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#anaconda-miniconda","title":"Anaconda \u548c Miniconda \u6709\u4ec0\u9ebc\u4e0d\u540c\uff1f","text":"<p>Miniconda \u662f Anaconda \u7684\u7cbe\u7c21\u7248\u672c\uff0c\u540c\u6a23\u4e5f\u662f\u4e00\u500b\u958b\u6e90\u74b0\u5883\uff0c\u5169\u8005\u90fd\u662fconda\u7cfb\u7d71\u7684\u4e00\u90e8\u5206\u3002\u4e0d\u540c\u4e4b\u8655\u5728\u65bcAnaconda\u6703\u9810\u5148\u5b89\u88dd\u8a31\u591a\u5e38\u7528\u7684 Python\u5957\u4ef6\uff0c\u56e0\u6b64\u4f54\u7528\u8f03\u591a\u7684\u786c\u789f\u7a7a\u9593\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cMiniconda \u56e0\u70ba\u540d\u70ba \u201dMini\u201d\uff0c\u56e0\u6b64\u50c5\u5b89\u88dd\u904b\u884c\u6240\u9700\u7684\u57fa\u672c\u5957\u4ef6\uff0c\u5c0d\u65bc\u6709\u591a\u500b\u4e0d\u540c Python \u7248\u672c\u5171\u5b58\u7684\u60c5\u6cc1\uff0c\u53ef\u4ee5\u7bc0\u7701\u5927\u91cf\u7a7a\u9593\u3002</p> <p>Note</p> <p>Miniconda\u53ef\u4ee5\u4f9d\u64da\u81ea\u5df1\u9700\u6c42\u5efa\u7acb\u81ea\u5df1\u7684Python\u74b0\u5883\uff0c\u60f3\u8981\u7684\u5957\u4ef6\u81ea\u884c\u5b89\u88dd</p> <p></p> <p>\u6eab\u99a8\u63d0\u9192</p> <p>\u5982\u679c\u4f60\u662f\u8cc7\u6599\u79d1\u5b78\u7684\u521d\u5b78\u8005\u5efa\u8b70\u53ef\u4ee5\u5148\u4f7f\u7528 Anaconda \u5efa\u7acb\u4f60\u7684 Python \u74b0\u5883\uff01</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.4Miniconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#miniconda","title":"\u5b89\u88dd Miniconda","text":""},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.4Miniconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#windows","title":"\u4ee5 Windows \u70ba\u4f8b","text":"<ol> <li>\u9032\u5165Miniconda \u4e0b\u8f09\u7db2\u9801 https://docs.conda.io/en/latest/miniconda.html</li> <li>\u5230 Latest Miniconda Installer Links Windows\u9078\u64c7 Minoconda3 Windows 64-bit</li> </ol> <p>\u4e0b\u8f09\u5f8c\u4f9d\u64da\u6307\u5f15\u9032\u884c Miniconda \u5b89\u88dd\u3002</p> <p>\u5b89\u88dd\u5b8c\u7562\u5f8c\u5728 Windows \u641c\u5c0b\u6b04\u8f38\u5165 powershell \uff0c\u53ef\u4ee5\u627e\u5230 \u201cAnaconda Powershell Prompt (miniconda3)\u201d\uff0c\u958b\u555f\u9019\u500b App\u3002</p> <p></p> <p>\u5982\u679c\u6709\u770b\u5230\u547d\u4ee4\u5217\u63d0\u793a\u4e2d\u7684(base)\uff0c\u90a3\u8868\u793a\u5b89\u88dd\u6210\u529f\u3002\u6211\u5011\u53ef\u4ee5\u8f38\u5165 <code>python \u2014version</code> \u78ba\u8a8d Python \u7248\u672c\u3002</p> <p></p> <p>\u5229\u7528 conda \u5efa\u7acb\u65b0\u7684\u865b\u64ec\u74b0\u5883 conda \u5b89\u88dd\u5b8c\u6210\u5f8c\u6703\u81ea\u52d5\u5efa\u7acb\u4e00\u500b\u540d\u70ba base \u7684\u74b0\u5883\u3002\u5047\u8a2d\u6211\u60f3\u5efa\u7acb Python 3.11 \u7684\u74b0\u5883\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u5217\u4e2d\u8f38\u5165</p> <pre><code>conda create -n test python=3.11\n</code></pre> <p>\u610f\u601d\u662f\u6211\u5011\u5c07\u7528conda\u9019\u500b\u6307\u4ee4\u5efa\u7acb\u4e00\u500b\u540d\u70batest(\u4f60\u4e5f\u53ef\u4ee5\u7528\u4efb\u4f55\u4f60\u559c\u6b61\u7684\u540d\u5b57)\u7684\u865b\u64ec\u74b0\u5883\uff0c\u4f7f\u7528python=3.11\u9019\u500b\u7248\u672c\u3002</p> <p>\u5b8c\u6210\u5f8c\u4f60\u6703\u770b\u5230\uff1a</p> <p>\u610f\u601d\u662f\u4f60\u53ef\u4ee5\u7528 conda activate test \u6307\u4ee4\u555f\u52d5\u4f60\u525b\u525b\u5efa\u7acb\u7684\u865b\u64ec\u74b0\u5883\u3002</p> <p></p> <p>\u4f60\u53ef\u4ee5\u767c\u73fe\u5728\u8f38\u5165\u5b8c\u6307\u4ee4\u5f8c\uff0c\u524d\u9762\u7684(base)\u5df2\u7d93\u8b8a\u6210 test\uff0c\u9019\u8868\u793a\u4f60\u5df2\u7d93\u6210\u529f\u5207\u63db\u5230\u525b\u525b\u5efa\u7acb\u7684\u865b\u64ec\u74b0\u5883\u4e86\uff01</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.4Miniconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#conda","title":"Conda \u6307\u5357","text":""},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.4Miniconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#conda_1","title":"Conda \u6307\u4ee4\u96c6","text":"<pre><code>// \u5efa\u7acb\u865b\u64ec\u74b0\u5883\nconda create -n \u586b\u4f60\u60f3\u8981\u7684\u74b0\u5883\u540d\u7a31 python=\u6539\u6210\u4f60\u8981\u7684\u7248\u672c\u865f\n// \u9032\u5165\u865b\u64ec\u74b0\u5883\uff0c\u6b64\u6642\u53ef\u4ee5\u5b89\u88dd\u4f60\u9700\u8981\u7684\u5957\u4ef6\nconda activate \u5275\u5efa\u7684\u74b0\u5883\u540d\u7a31\n// \u9000\u51fa\u74b0\u5883\u56de\u5230b\nase conda deactivate\n// \u67e5\u8a62\u7576\u524d\u672c\u6a5f\u5167\u6709\u90a3\u4e9b\u74b0\u5883\nconda env list\n// \u522a\u9664\u74b0\u5883 c\nconda env remove -n \u6b32\u522a\u9664\u7684\u74b0\u5883\u540d\u7a31\n// \u67e5\u770b\u7576\u524d\u74b0\u5883\u5b89\u88dd\u54ea\u4e9bpython\u5957\u4ef6\nconda list\n// \u532f\u51fa\u74b0\u5883\nconda env export &gt; environment.yml\n</code></pre>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.4Miniconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#_1","title":"\u5b89\u88dd\u5957\u4ef6","text":"<p>\u5728\u74b0\u5883\u5167\uff0c\u5c31\u53ef\u4ee5\u5b89\u88dd\u4f60\u9700\u8981\u7684\u5957\u4ef6:</p> <pre><code>// \u4f8b\u5982\u5b89\u88dd\u8cc7\u6599\u8655\u7406\u5e38\u7528\u7684pandas\nconda install pandas\n// \u6216\u662f\u4f7f\u7528pip\u6307\u4ee4\u4e5f\u884c\npip install pandas\n</code></pre>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.4Miniconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#jupyter-botebook","title":"\u5b89\u88dd Jupyter Botebook","text":"<p>Jupyter Notebook \u662f Ipython \u7684 Web \u64f4\u5145\u5957\u4ef6\uff0c\u80fd\u8b93\u4f7f\u7528\u8005\u5728\u700f\u89bd\u5668\u4e2d\u64b0\u5beb\u53ca\u57f7\u884c\u7a0b\u5f0f\uff0cJupyter Notebook \u9084\u652f\u63f4\u4e86Julia\u3001R\u3001\u4ee5\u53ca\u5176\u4ed6\u7a0b\u5f0f\u8a9e\u8a00\u7684notebook\u3002</p> <pre><code>pip install jupyterlab\n</code></pre> <p>\u5b89\u88dd\u5b8c\u6210\u5f8c\u5148 cd \u9032\u5165\u4f60\u7684\u5c08\u6848\u76ee\u9304\uff0c\u63a5\u8457\u4f7f\u7528\u4ee5\u4e0b\u6307\u4ee4\u555f\u52d5\u8207\u4f7f\u7528 Jupyter lab\u3002\u63a5\u8457\u6703\u81ea\u52d5\u958b\u555f\u700f\u89bd\u5668\u3002</p> <pre><code>jupyter lab\n</code></pre> <p></p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.4Miniconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#pip-requirementstxt","title":"\u4f7f\u7528 pip \u4f86\u7522\u751f requirements.txt","text":"<p>\u7576\u4f60\u4f7f\u7528 Python \u958b\u767c\u61c9\u7528\u7a0b\u5f0f\u6642\uff0c\u901a\u5e38\u6703\u5b89\u88dd\u8a31\u591a\u5916\u90e8\u5957\u4ef6\u3002\u70ba\u4e86\u65b9\u4fbf\u5728\u5176\u4ed6\u74b0\u5883\u4e2d\u91cd\u73fe\u9019\u4e9b\u5957\u4ef6\u7684\u5b89\u88dd\u72c0\u614b\uff0c\u53ef\u4ee5\u900f\u904e pip freeze \u6307\u4ee4\u5c07\u76ee\u524d\u74b0\u5883\u4e2d\u7684\u6240\u6709\u5957\u4ef6\u53ca\u5176\u7248\u672c\u8a18\u9304\u5728\u4e00\u500b requirements.txt \u6a94\u6848\u4e2d\u3002\u555f\u52d5\u865b\u64ec\u74b0\u5883\u5f8c\uff0c\u57f7\u884c\u4ee5\u4e0b\u6307\u4ee4\u4f86\u751f\u6210 requirements.txt \u6a94\u6848\uff1a</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>\u9019\u500b\u6307\u4ee4\u6703\u5c07\u76ee\u524d\u74b0\u5883\u4e2d\u7684\u6240\u6709\u5957\u4ef6\uff08\u4ee5\u53ca\u5b83\u5011\u7684\u7248\u672c\u865f\uff09\u5217\u51fa\u4f86\uff0c\u4e26\u5132\u5b58\u5230\u4e00\u500b\u540d\u70ba requirements.txt \u7684\u6a94\u6848\u4e2d\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.4Miniconda%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#_2","title":"\u5728\u5176\u4ed6\u74b0\u5883\u4e2d\u5b89\u88dd\u76f8\u540c\u7684\u5957\u4ef6","text":"<p>\u7576\u4f60\u60f3\u8981\u5728\u5176\u4ed6\u96fb\u8166\u6216\u74b0\u5883\u4e2d\u5b89\u88dd\u9019\u4e9b\u5957\u4ef6\u6642\uff0c\u4f60\u53ea\u9700\u8981\u57f7\u884c\u4ee5\u4e0b\u6307\u4ee4\u4f86\u6839\u64da requirements.txt \u5b89\u88dd\u6240\u6709\u7684\u5957\u4ef6\uff1a</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>\u9019\u6703\u6839\u64da requirements.txt \u4e2d\u5217\u51fa\u7684\u5957\u4ef6\u53ca\u7248\u672c\u865f\uff0c\u9010\u4e00\u5b89\u88dd\u5230\u7576\u524d\u7684 Python \u74b0\u5883\u4e2d\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.5Miniforge%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/","title":"\u4ee5\u958b\u6e90 Miniforge \u66ff\u4ee3 Anaconda","text":""},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.5Miniforge%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#anacondaminiforge","title":"Anaconda\u5546\u7528\u8981\u6536\u8cbb\u4e86\u600e\u9ebc\u8fa6?\u6211\u5011\u53ef\u4ee5\u6539\u7528Miniforge!","text":"<p>\u96a8\u8457\u4f01\u696d\u898f\u6a21\u64f4\u5927\u5230\u8d85\u904e200\u4eba\uff0c\u8a31\u591a\u516c\u53f8\u5728\u4f7f\u7528 Anaconda \u6216 Miniconda \u5efa\u69cb\u5167\u90e8\u958b\u767c\u74b0\u5883\u6642\uff0c\u5c31\u5fc5\u9808\u9762\u5c0d\u5546\u696d\u6388\u6b0a\u7684\u554f\u984c\u3002\u96d6\u7136\u9019\u5169\u6b3e\u5de5\u5177\u672c\u8eab\u63d0\u4f9b\u514d\u8cbb\u7248\u672c\uff0c\u4f46\u5728\u5927\u91cf\u4f7f\u7528\u6216\u91cd\u5ea6\u5b58\u53d6\u5b98\u65b9\u8cc7\u6e90\u7684\u60c5\u6cc1\u4e0b\uff0c\u5c31\u5fc5\u9808\u8cfc\u8cb7 Commercial\u3001Team \u6216 Enterprise \u6388\u6b0a\u3002</p> <p>Note<p>\u53c3\u8003: Is conda Free?</p> </p> <p>\u56e0\u6b64\uff0c\u63a1\u7528\u5b8c\u5168\u958b\u6e90\u4e14\u793e\u7fa4\u4e3b\u5c0e\u7684 Miniforge \u6210\u70ba\u4e00\u500b\u66f4\u5b89\u5168\u4e14\u9748\u6d3b\u7684\u66ff\u4ee3\u65b9\u6848\u3002Miniforge \u4e0d\u50c5\u4fdd\u7559\u4e86 Anaconda/Miniconda \u7684\u6838\u5fc3\u529f\u80fd\uff08\u4f8b\u5982 conda \u5957\u4ef6\u7ba1\u7406\u3001\u74b0\u5883\u5efa\u7acb\u8207\u7ba1\u7406\uff09\uff0c\u540c\u6642\u907f\u514d\u4e86\u5546\u7528\u6388\u6b0a\u7684\u4e0d\u78ba\u5b9a\u6027\u8207\u672a\u4f86\u6536\u8cbb\u898f\u7bc4\u6536\u7dca\u7684\u6f5b\u5728\u98a8\u96aa\u3002</p> <p></p> <p>Note<p>\u500b\u4eba\u3001\u5b78\u8853\u7528\u9014\u53ca\u5c0f\u578b\u4f01\u696d\u7686\u53ef\u7e7c\u7e8c\u514d\u8cbb\u4f7f\u7528 Anaconda</p> </p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.5Miniforge%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#miniforge","title":"Miniforge \u7c21\u4ecb","text":"<p>Miniforge \u70ba\u4e00\u6b3e\u5b8c\u5168\u958b\u6e90\u7684 Conda \u767c\u884c\u7248\uff0c\u5176\u4e3b\u8981\u7279\u9ede\u5305\u62ec\uff1a</p> <ul> <li>\u958b\u6e90\u6388\u6b0a\uff1a\u5168\u6578\u63a1\u7528\u958b\u6e90\u6a21\u5f0f\uff0c\u4f01\u696d\u7121\u9700\u64d4\u5fc3\u56e0\u5546\u696d\u4f7f\u7528\u800c\u89f8\u767c\u6388\u6b0a\u554f\u984c\u3002</li> <li>\u6838\u5fc3\u5de5\u5177\u4e00\u81f4\uff1aMiniforge \u6240\u5167\u5efa\u7684 conda \u8207 Anaconda/Miniconda \u5b8c\u5168\u76f8\u540c\uff0c\u56e0\u6b64\u5728\u5957\u4ef6\u5b89\u88dd\u3001\u5347\u7d1a\u3001\u79fb\u9664\u8207\u865b\u64ec\u74b0\u5883\u7ba1\u7406\u65b9\u9762\u5747\u7121\u7e2b\u76f8\u5bb9\u3002</li> <li>\u793e\u7fa4\u4e3b\u5c0e\uff1a\u6240\u6709\u5957\u4ef6\u7686\u900f\u904e GitHub \u9032\u884c\u7ba1\u7406\u8207\u6258\u7ba1\uff0c\u53ef\u4ee5\u4f7f\u7528 conda-forge \u4f5c\u70ba\u4e0b\u8f09\u983b\u9053(\u5fc5\u9808\u8981\u624b\u52d5\u6307\u5b9achannel)\uff0c\u80fd\u6709\u6548\u907f\u958b\u5b98\u65b9 repository \u5e36\u4f86\u7684\u5546\u696d\u98a8\u96aa\u3002</li> <li>\u8f15\u91cf\u4e14\u9748\u6d3b\uff1a\u9664\u4e86\u57fa\u672c\u529f\u80fd\u5916\uff0cMiniforge \u9084\u652f\u63f4 mamba\uff08\u5feb\u901f\u7684\u5957\u4ef6\u5b89\u88dd\u5de5\u5177\uff09\u3001PyPy \u7b49\u5176\u4ed6\u57f7\u884c\u74b0\u5883\uff0c\u63d0\u4f9b\u66f4\u591a\u5f48\u6027\u8207\u6548\u7387\u3002</li> </ul>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.5Miniforge%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#miniforge_1","title":"Miniforge \u5b89\u88dd\u8207\u4f7f\u7528\u6559\u5b78","text":"<p>Miniforge \u63d0\u4f9b\u5c0d\u61c9\u5404\u7a2e\u4f5c\u696d\u7cfb\u7d71\u7684\u5b89\u88dd\u6a94\u6848\uff0c\u4e0d\u8ad6\u4f60\u4f7f\u7528 Windows\u3001macOS \u6216 Linux\uff0c\u90fd\u80fd\u4f9d\u64da\u4f5c\u696d\u7cfb\u7d71\u4e0b\u8f09\u9069\u5408\u7684\u7248\u672c\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.5Miniforge%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#_1","title":"\u4e0b\u8f09\u5b89\u88dd\u6a94","text":"<ol> <li>\u524d\u5f80 Miniforge \u7684 GitHub \u767c\u884c\u9801\u9762\uff1aMiniforge Releases\u3002</li> <li>\u6839\u64da\u4f60\u6240\u4f7f\u7528\u7684\u4f5c\u696d\u7cfb\u7d71\u9078\u64c7\u5c0d\u61c9\u7684\u5b89\u88dd\u6a94\uff1a</li> <li>Windows\uff1a\u901a\u5e38\u70ba <code>.exe</code> \u6a94\u6848\u3002</li> <li>macOS \u8207 Linux\uff1a\u591a\u70ba <code>.sh</code> \u8173\u672c\u6a94\u6848\uff0c\u4f9d\u7cfb\u7d71\u67b6\u69cb\uff08\u5982 x86_64\u3001arm64\uff09\u9078\u64c7\u5408\u9069\u7248\u672c\u3002</li> </ol> <p>\u4e0b\u8f09\u5b8c\u6210\u5f8c\uff0c\u76f4\u63a5\u96d9\u64ca\u57f7\u884c\u5b89\u88dd\u7a0b\u5f0f\uff08\u6216\u5728\u7d42\u7aef\u6a5f\u4e2d\u57f7\u884c\u8173\u672c\u6a94\u6848\uff09\u3002\u4f9d\u7167\u5716\u5f62\u5316\u4ecb\u9762\u7684\u6307\u793a\u5b8c\u6210\u5b89\u88dd\uff1a - \u95b1\u8b80\u4e26\u540c\u610f\u6388\u6b0a\u689d\u6b3e\u3002 - \u9078\u64c7\u5b89\u88dd\u8def\u5f91\uff0c\u9810\u8a2d\u6216\u4f9d\u9700\u6c42\u81ea\u8a02\u5b89\u88dd\u4f4d\u7f6e\u3002 - \u6309\u4e0b\u300c\u5b89\u88dd\u300d\u5f8c\uff0c\u7b49\u5f85\u5b89\u88dd\u7a0b\u5e8f\u5b8c\u6210\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.5Miniforge%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#miniforge_2","title":"\u4f7f\u7528 Miniforge","text":"<p>\u5b89\u88dd\u5b8c\u6210\u5f8c\uff0c\u4f9d\u7167\u4f60\u7684\u4f5c\u696d\u7cfb\u7d71\u958b\u555f\u5c0d\u61c9\u7684\u7d42\u7aef\u6a5f\u6216\u547d\u4ee4\u63d0\u793a\u5b57\u5143\uff1a</p> <ul> <li>Windows \u7528\u6236\u53ef\u5728\u958b\u59cb\u9078\u55ae\u4e2d\u627e\u5230\u300cMiniforge Prompt\u300d\u3002</li> <li>macOS \u8207 Linux \u7528\u6236\u5247\u53ef\u76f4\u63a5\u5728\u7d42\u7aef\u6a5f\u4e2d\u4f7f\u7528 conda \u6307\u4ee4\u3002</li> </ul> <p>\u6839\u64da\u524d\u6587\u4ecb\u7d39\uff0cminiforge \u9810\u8a2d\u6574\u5408\u4e86 conda \u8207 mamba \u5169\u6b3e\u5957\u4ef6\u7ba1\u7406\u5de5\u5177\u3002\u5176\u4e2d\uff0cmamba \u4e0d\u50c5\u80fd\u5920\u5b8c\u6574\u53d6\u4ee3 conda \u7684\u529f\u80fd\uff0c\u5176\u57f7\u884c\u901f\u5ea6\u4e5f\u66f4\u70ba\u8fc5\u6377\u3002\u4f7f\u7528\u6642\uff0c\u53ea\u9700\u8981\u5c07\u5e73\u5e38\u4f7f\u7528\u7684 conda \u6307\u4ee4\u4e2d\u7684\u300cconda\u300d\u6539\u6210 mamba\uff0c\u5373\u53ef\u5be6\u73fe\u540c\u6a23\u7684\u64cd\u4f5c\u63a5\u4e0b\u4f86\uff0c\u53ef\u4f9d\u7167\u4ee5\u4e0b\u6b65\u9a5f\u4f7f\u7528 Miniforge \u7ba1\u7406\u74b0\u5883\u8207\u5b89\u88dd\u5957\u4ef6\uff1a</p> <ul> <li>\u5efa\u7acb\u865b\u64ec\u74b0\u5883\uff1a</li> </ul> <p><code>mamba create -n myenv python=3.11</code></p> <ul> <li>\u555f\u52d5\u865b\u64ec\u74b0\u5883\uff1a</li> </ul> <p><code>mamba activate myenv</code></p> <ul> <li>\u5b89\u88dd\u6240\u9700\u5957\u4ef6\uff1a</li> </ul> <p><code>mamba install numpy pandas matplotlib</code></p> <ul> <li>\u9000\u51fa\u865b\u64ec\u74b0\u5883\uff1a</li> </ul> <p><code>mamba deactivate</code></p> <ul> <li>\u67e5\u770b\u5df2\u6709\u7684\u865b\u64ec\u74b0\u5883</li> </ul> <p><code>mamba env list</code></p> <ul> <li>\u66f4\u65b0 Conda \u8207\u6240\u6709\u5df2\u5b89\u88dd\u5957\u4ef6\uff1a</li> </ul> <p><code>mamba update conda     mamba update --all</code></p> <p>\u9019\u4e9b\u64cd\u4f5c\u5747\u8207 Anaconda/Miniconda \u5b8c\u5168\u4e00\u81f4\uff0c\u8b93\u539f\u6709\u7684\u5de5\u4f5c\u6d41\u7a0b\u7121\u7e2b\u8f49\u79fb\u81f3 Miniforge \u5e73\u53f0\uff0c\u78ba\u4fdd\u65e2\u6709\u958b\u767c\u74b0\u5883\u7684\u7a69\u5b9a\u8207\u4fbf\u5229\u3002 \u6b64\u5916\uff0cMiniforge \u4e5f\u652f\u63f4 mamba\u3002\u5be6\u969b\u4e0a\uff0cmamba \u662f conda \u7684\u9ad8\u6548\u66ff\u4ee3\u54c1\uff0c\u5169\u8005\u5728\u8a9e\u6cd5\u4e0a\u5b8c\u5168\u76f8\u5bb9\uff0c\u4f60\u53ef\u4ee5\u5c07\u6240\u6709 conda \u6307\u4ee4\u76f4\u63a5\u66ff\u63db\u6210 mamba \u6307\u4ee4\u3002mamba \u63a1\u7528 C++ \u7de8\u5beb\uff0c\u4e26\u5229\u7528 libsolv \u9032\u884c\u4f9d\u8cf4\u89e3\u6790\uff0c\u56e0\u6b64\u5728\u89e3\u6c7a\u4f9d\u8cf4\u95dc\u4fc2\u8207\u5b89\u88dd\u5957\u4ef6\u7684\u901f\u5ea6\u4e0a\uff0c\u6bd4 conda \u5feb\u4e86\u8a31\u591a\u3002\u5c0d\u65bc\u9700\u8981\u983b\u7e41\u5b89\u88dd\u6216\u66f4\u65b0\u5927\u91cf\u5957\u4ef6\u7684\u958b\u767c\u6d41\u7a0b\uff0cmamba \u80fd\u5920\u5927\u5e45\u63d0\u5347\u6548\u7387\uff0c\u8b93\u958b\u767c\u74b0\u5883\u7684\u7dad\u8b77\u66f4\u52a0\u9806\u66a2\u3002</p>"},{"location":"1.%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/1.5Miniforge%E4%BB%8B%E7%B4%B9%E8%88%87%E5%AE%89%E8%A3%9D/#_2","title":"\u88dc\u5145\u8aaa\u660e","text":"<p>\u7576\u4f60\u4f7f\u7528\u6307\u4ee4</p> <pre><code>mamba create -n myenv python=3.11\n</code></pre> <p>\u6642\uff0cmamba \u6703\u4f9d\u64da\u9810\u8a2d\u8a2d\u5b9a\u7684 channel \u4f86\u4e0b\u8f09\u5b89\u88dd\u5957\u4ef6\uff0c\u800c\u9810\u8a2d\u5c31\u5305\u542b\u4e86 <code>repo.anaconda.com</code> \u9019\u500b\u7531 Anaconda.com \u63d0\u4f9b\u7684\u5546\u7528 channel\uff0c\u56e0\u6b64\u6703\u8df3\u51fa\u8b66\u544a\u8a0a\u606f\uff1a</p> <pre><code>warning libmamba 'repo.anaconda.com', a commercial channel hosted by Anaconda.com, is used.\n</code></pre> <p>\u82e5\u516c\u53f8\u74b0\u5883\u5c0d\u5546\u696d\u6388\u6b0a\u6709\u8981\u6c42\uff0c\u70ba\u4e86\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u6cd5\u5f8b\u98a8\u96aa\u6216\u6388\u6b0a\u722d\u8b70\uff0c\u5efa\u8b70\u6539\u7528\u793e\u7fa4\u5ee3\u6cdb\u4f7f\u7528\u7684 <code>conda-forge</code> channel\u3002\u4f60\u53ef\u4ee5\u63a1\u7528\u4ee5\u4e0b\u6307\u4ee4\uff1a</p> <pre><code>mamba create -n myenv python=3.11 --override-channels -c conda-forge\n</code></pre> <p>\u9019\u500b\u6307\u4ee4\u7684\u4f5c\u7528\u8aaa\u660e\u5982\u4e0b\uff1a</p> <ul> <li><code>--override-channels</code>\uff1a\u6b64\u53c3\u6578\u544a\u8a34 mamba \u5ffd\u7565\u9810\u8a2d\u7684\u6240\u6709 channels\uff0c\u53ea\u63a1\u7528\u5f8c\u7e8c\u6307\u5b9a\u7684 channel\u3002</li> <li><code>-c conda-forge</code>\uff1a\u6307\u5b9a\u4f7f\u7528 <code>conda-forge</code> \u9019\u500b channel \u4f86\u4e0b\u8f09\u4e26\u5b89\u88dd\u6240\u6709\u5957\u4ef6\u3002</li> </ul> <p>\u9019\u6a23\u5c31\u80fd\u5b8c\u5168\u907f\u958b Anaconda \u9810\u8a2d\u7684\u5546\u7528 channel\uff0c\u7b26\u5408\u516c\u53f8\u5c0d\u5546\u696d\u6388\u6b0a\u7684\u9700\u6c42\u3002</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.1%E8%AE%8A%E6%95%B8%E8%88%87%E5%9F%BA%E6%9C%AC%E9%81%8B%E7%AE%97/","title":"2.1 \u8b8a\u6578\u8207\u57fa\u672c\u904b\u7b97","text":""},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.1%E8%AE%8A%E6%95%B8%E8%88%87%E5%9F%BA%E6%9C%AC%E9%81%8B%E7%AE%97/#_1","title":"\u8b8a\u6578\u7684\u5b9a\u7fa9\u8207\u8ce6\u503c","text":"<p>\u8b8a\u6578\u662f\u7528\u4f86\u5132\u5b58\u6578\u64da\u7684\u5bb9\u5668\u3002\u5728 Python \u4e2d\uff0c\u4f60\u53ef\u4ee5\u8f15\u9b06\u5730\u5c07\u4e0d\u540c\u7684\u6578\u503c\u8ce6\u503c\u7d66\u8b8a\u6578\uff0c\u7121\u9700\u4e8b\u5148\u5ba3\u544a\u5176\u8cc7\u6599\u578b\u5225\u3002\u8b8a\u6578\u7684\u547d\u540d\u61c9\u8a72\u5177\u6709\u63cf\u8ff0\u6027\uff0c\u8b93\u7a0b\u5f0f\u78bc\u66f4\u5bb9\u6613\u95b1\u8b80\u3002</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.1%E8%AE%8A%E6%95%B8%E8%88%87%E5%9F%BA%E6%9C%AC%E9%81%8B%E7%AE%97/#_2","title":"\u55ae\u4e00\u8b8a\u6578\u8ce6\u503c","text":"<p>\u4f60\u53ef\u4ee5\u900f\u904e = \u5c07\u6578\u503c\u8ce6\u503c\u7d66\u8b8a\u6578\uff1a</p> <pre><code>a = 1\nb = c = 5\n</code></pre> <p>\u9019\u6bb5\u7a0b\u5f0f\u78bc\u4e2d\uff0c\u8b8a\u6578 a \u88ab\u8ce6\u503c\u70ba 1\uff0c\u800c\u8b8a\u6578 b \u548c c \u540c\u6642\u88ab\u8ce6\u503c\u70ba 5\u3002</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.1%E8%AE%8A%E6%95%B8%E8%88%87%E5%9F%BA%E6%9C%AC%E9%81%8B%E7%AE%97/#_3","title":"\u591a\u91cd\u8ce6\u503c","text":"<p>Python \u4e5f\u652f\u63f4\u4e00\u6b21\u5c07\u591a\u500b\u503c\u5206\u5225\u8ce6\u503c\u7d66\u591a\u500b\u8b8a\u6578\uff1a</p> <pre><code>a, b, c = 1, 2, \"John\"\nprint(a)  # 1\nprint(b)  # 2\nprint(c)  # John\n</code></pre> <p>\u9019\u6a23\u7684\u591a\u91cd\u8ce6\u503c\u65b9\u5f0f\u53ef\u4ee5\u7c21\u5316\u7a0b\u5f0f\u78bc\uff0c\u4e26\u4e14\u63d0\u9ad8\u53ef\u8b80\u6027\u3002</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.1%E8%AE%8A%E6%95%B8%E8%88%87%E5%9F%BA%E6%9C%AC%E9%81%8B%E7%AE%97/#data-types","title":"\u8cc7\u6599\u578b\u5225 (Data Types)","text":"<p>Python \u662f\u52d5\u614b\u578b\u5225\u8a9e\u8a00\uff0c\u56e0\u6b64\u8b8a\u6578\u7684\u8cc7\u6599\u578b\u5225\u6703\u6839\u64da\u6240\u8ce6\u503c\u7684\u5167\u5bb9\u800c\u81ea\u52d5\u6c7a\u5b9a\u3002\u4ee5\u4e0b\u662f\u5e7e\u500b\u5e38\u898b\u7684\u8cc7\u6599\u578b\u5225\uff1a</p> <ul> <li>\u6574\u6578\u578b\u5225 (int)</li> <li>\u6d6e\u9ede\u6578\u578b\u5225 (float)</li> <li>\u5b57\u4e32\u578b\u5225 (str)</li> <li>\u5e03\u6797\u503c\uff08bool\uff09 </li> </ul> <pre><code>counter = 100    # \u6574\u6578\nmiles = 1000.0   # \u6d6e\u9ede\u6578\nname = \"John\"    # \u5b57\u4e32\n\nprint(counter)  # 100\nprint(miles)    # 1000.0\nprint(name)     # John\n</code></pre> <p>\u5728\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c\u8b8a\u6578 counter \u662f\u6574\u6578\uff0cmiles \u662f\u6d6e\u9ede\u6578\uff0c\u800c name \u662f\u5b57\u4e32\u3002Python \u6703\u6839\u64da\u8ce6\u503c\u7684\u5167\u5bb9\u81ea\u52d5\u9078\u64c7\u9069\u5408\u7684\u8cc7\u6599\u578b\u5225\u3002</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.1%E8%AE%8A%E6%95%B8%E8%88%87%E5%9F%BA%E6%9C%AC%E9%81%8B%E7%AE%97/#keywords","title":"\u95dc\u9375\u5b57 (Keywords)","text":"<p>\u95dc\u9375\u5b57\u662f Python \u4fdd\u7559\u7528\u4f86\u8868\u793a\u7279\u5b9a\u529f\u80fd\u7684\u8a5e\u5f59\uff0c\u9019\u4e9b\u8a5e\u4e0d\u80fd\u7528\u4f5c\u8b8a\u6578\u540d\u7a31\u3002\u50cf\u662f if\u3001else\u3001for \u7b49\u90fd\u662f Python \u7684\u4fdd\u7559\u5b57\u3002\u4f7f\u7528\u4fdd\u7559\u5b57\u4f5c\u70ba\u8b8a\u6578\u540d\u7a31\u6703\u5c0e\u81f4\u8a9e\u6cd5\u932f\u8aa4\u3002</p> \u95dc\u9375\u5b57 \u529f\u80fd <code>if</code> \u7528\u65bc\u689d\u4ef6\u5224\u65b7\uff0c\u57f7\u884c\u7b26\u5408\u689d\u4ef6\u7684\u4ee3\u78bc\u584a <code>else</code> \u8207 <code>if</code> \u914d\u5408\uff0c\u8655\u7406\u689d\u4ef6\u4e0d\u7b26\u5408\u7684\u60c5\u6cc1 <code>for</code> \u7528\u65bc\u8ff4\u5708\uff0c\u904d\u6b77\u53ef\u8fed\u4ee3\u5c0d\u8c61\u7684\u5143\u7d20 <code>while</code> \u7528\u65bc\u689d\u4ef6\u8ff4\u5708\uff0c\u7576\u689d\u4ef6\u6210\u7acb\u6642\u53cd\u8986\u57f7\u884c <code>def</code> \u7528\u65bc\u5b9a\u7fa9\u51fd\u5f0f <code>return</code> \u7528\u65bc\u5f9e\u51fd\u5f0f\u4e2d\u8fd4\u56de\u503c <code>class</code> \u7528\u65bc\u5b9a\u7fa9\u985e\u5225 <code>import</code> \u7528\u65bc\u532f\u5165\u6a21\u7d44\u6216\u5176\u4ed6\u7a0b\u5f0f\u5eab <code>try</code> \u7528\u65bc\u6355\u6349\u7570\u5e38\u4e26\u8655\u7406\u932f\u8aa4 <code>except</code> \u8207 <code>try</code> \u914d\u5408\uff0c\u8655\u7406\u7570\u5e38\u7684\u4ee3\u78bc\u584a"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.1%E8%AE%8A%E6%95%B8%E8%88%87%E5%9F%BA%E6%9C%AC%E9%81%8B%E7%AE%97/#arithmetic-operators","title":"\u7b97\u8853\u904b\u7b97\u7b26 (Arithmetic Operators)","text":"<p>Python \u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u7b97\u8853\u904b\u7b97\u7b26\u4f86\u9032\u884c\u6578\u5b78\u904b\u7b97\uff0c\u4ee5\u4e0b\u662f\u5e7e\u500b\u5e38\u898b\u7684\u904b\u7b97\u7b26\u53ca\u5176\u7528\u6cd5\uff1a</p> <ul> <li><code>+</code> : \u52a0\u6cd5</li> <li><code>-</code> : \u6e1b\u6cd5</li> <li><code>/</code> : \u9664\u6cd5</li> <li><code>%</code> : \u53d6\u9918\u6578</li> <li><code>*</code> : \u4e58\u6cd5</li> <li><code>//</code> : \u53d6\u6574\u9664</li> <li><code>**</code> : \u6307\u6578</li> </ul> <pre><code>add = 1 + 1     # 2\nsub = 1 - 1     # 0\ndiv = 4 / 2     # 2.0\nmod = 4 % 3     # 1\nmul = 2 * 3     # 6\nf_div = 5 // 2  # 2\npower = 2 ** 3  # 8\n</code></pre> <p>\u9019\u4e9b\u904b\u7b97\u7b26\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u5728\u7a0b\u5f0f\u4e2d\u8655\u7406\u5404\u7a2e\u6578\u5b78\u904b\u7b97\uff0c\u7279\u5225\u662f // \u662f\u9032\u884c\u6574\u6578\u9664\u6cd5\uff0c\u800c ** \u7528\u4f86\u9032\u884c\u6b21\u65b9\u904b\u7b97\u3002</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.1%E8%AE%8A%E6%95%B8%E8%88%87%E5%9F%BA%E6%9C%AC%E9%81%8B%E7%AE%97/#comparison-operators","title":"\u6bd4\u8f03\u904b\u7b97\u7b26 (Comparison Operators)","text":"<p>\u6bd4\u8f03\u904b\u7b97\u7b26\u7528\u4f86\u6bd4\u8f03\u5169\u500b\u503c\uff0c\u904b\u7b97\u7d50\u679c\u70ba\u5e03\u6797\u503c (True \u6216 False)\u3002</p> <p>\u5e38\u898b\u7684\u6bd4\u8f03\u904b\u7b97\u7b26\u5305\u62ec\uff1a</p> <ul> <li><code>==</code> : \u7b49\u65bc</li> <li><code>!=</code> : \u4e0d\u7b49\u65bc</li> <li><code>&gt;</code> : \u5927\u65bc</li> <li><code>&lt;</code> : \u5c0f\u65bc</li> <li><code>&gt;=</code> : \u5927\u65bc\u7b49\u65bc</li> <li><code>&lt;=</code> : \u5c0f\u65bc\u7b49\u65bc</li> </ul> <pre><code>a, b = 10, 20\n\nprint(a == b)  # False\nprint(a != b)  # True\nprint(a &lt; b)   # True\nprint(a &gt; b)   # False\nprint(a &lt;= b)  # True\nprint(a &gt;= b)  # False\n</code></pre> <p>\u900f\u904e\u9019\u4e9b\u6bd4\u8f03\u904b\u7b97\u7b26\uff0c\u53ef\u4ee5\u5224\u65b7\u5169\u500b\u503c\u4e4b\u9593\u7684\u95dc\u4fc2\uff0c\u9019\u5728\u63a7\u5236\u6d41\u7a0b\u4e2d\u975e\u5e38\u6709\u7528\u3002</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/","title":"2.2 \u8cc7\u6599\u578b\u614b\u8207\u8f49\u63db","text":""},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#numbers","title":"Numbers","text":"<p>\u6574\u6578 \u6d6e\u9ede \u6578\u8907\u6578</p> <pre><code># Output: &lt;class 'int'&gt;\nprint(type(5))\n\n# Output: &lt;class 'float'&gt;\nprint(type(5.0))\n\n# Output: &lt;class 'complex'&gt;\nc = 5 + 3j\nprint(type(c))\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#lists","title":"Lists","text":"<pre><code># empty list\nmy_list = []\n\n# list of integers\nmy_list = [1, 2, 3]\n\n# list with mixed datatypes\nmy_list = [1, \"Hello\", 2.3]\n\n# nested list\nmy_list = [\"mouse\", [8, 4, 6]]\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#list-index","title":"List - index","text":"<pre><code>my_list = ['h','e','l','l','o']\n\nprint(my_list[0]) # Output: h\nprint(my_list[1]) # Output: e\n\n# my_list[5.0] # Error! Only integer can be used for indexing\nn_list = [\"Happy\", [2,0,1,8]] # Nested List\nprint(n_list[1][3]) # Output: 8\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#list-negative-indexing","title":"List - negative indexing","text":"<pre><code>my_list = ['p','r','o','b','e']\n\nprint(my_list[-1]) # Output: e\nprint(my_list[-5]) # Output: p\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#list-slicing","title":"List - slicing(\u5207\u7247)","text":"<pre><code>my_list = [0, 1, 2, 3, 4, 5, 6, 7, 8]\nprint(my_list[2:5]) # elements 3rd to 5th\n\n## [2, 3, 4]\nprint(my_list[:-5]) # elements beginning to 4th\n\n## [0, 1, 2, 3]\nprint(my_list[5:]) # elements 6th to end\n\n## [5, 6, 7, 8]\nprint(my_list[:]) # elements beginning to end\n## [0, 1, 2, 3, 4, 5, 6, 7, 8]\n\nprint(my_list[::3]) # slice a parent list with a step length \u53d6\u5168\u90e8\u9593\u683c3\n## [0, 3, 6]\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#built-in-list-methods","title":"Built-in List Methods","text":"<pre><code>num_list = [0, 0, 1, 2, 3, 4, 5, 6, 7, 8]\n\n# append() is used to add an element at the end of the list.\nnum_list.append(9)\n\n# remove() takes a single element as an argument and removes itfrom the list.\nnum_list.remove(9)\n</code></pre> <pre><code># index() is used to find the index value of a particular element.\nnum_list.index(5)\n\n# pop() takes a single argument (index) and removes the element present at that index from the list.\nresult = num_list.pop(7)\n\nprint(result) # 6\nprint(num_list) # [0, 0, 1, 2, 3, 4, 5, 7, 8]\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#tuples","title":"Tuples","text":"<p>Tuples\u5143\u7d20\u4e0d\u80fd\u4fee\u6539</p> <pre><code># empty tuple\nmy_tuple = ()\nprint(my_tuple) # Output: ()\n# tuple having integers\nmy_tuple = (1, 2, 3)\nprint(my_tuple) # Output: (1, 2, 3)\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#strings","title":"Strings","text":"<pre><code># all of the following are equivalent\nmy_string = 'Hello'\nprint(my_string)\nmy_string = \"Hello\"\nprint(my_string)\n</code></pre> <p>\u53ef\u4ee5\u5229\u7528\u7d22\u5f15\u503c\u53d6\u5f97\u5167\u5bb9</p> <pre><code>my_str = 'Hello World!'\nprint('my_str = ', my_str) # my_str = Hello World!\n\n# first character, last character\nprint(my_str[0]) # H\nprint(my_str[-1]) # !\n\n# slicing 3nd to 5th character\nprint(my_str[2:5]) # llo\n</code></pre> <p>\u5b57\u4e32\u4e32\u9023</p> <pre><code>str1 = 'Hello'\nstr2 = 'World!'\n\n# using +\nprint(str1 + str2) # HelloWorld!\n\n# using *\nprint(str1 * 3) # HelloHelloHello\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#built-in-strings-methods","title":"Built-in Strings Methods","text":"<pre><code>my_string = \"hello world\"\n\nprint(my_string.find(\"he\")) # Output: 0\nprint(my_string.capitalize()) # Output: Hello world\nprint(my_string.upper()) # Output: HELLO WORLD\nprint(my_string.endswith(\"d\")) # Output: True\n\nprint(my_string.split(\" \")) # Output: ['hello', 'world']\n\nprint(my_string.replace(\"hello\", \"Nihao\")) # Output: Nihao world\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#sets","title":"Sets","text":"<p>\u7121\u5e8f\u8cc7\u6599\u96c6\u5408\u4e14\u4e0d\u80fd\u91cd\u8907\u7121\u6cd5\u66f4\u6539</p> <pre><code># set of integers\nmy_set = {1, 2, 3}\nprint(my_set) # {1, 2, 3}\n# set of mixed datatypes\nmy_set = {1.0, \"Hello\", (1, 2, 3)}\nprint(my_set) # {'Hello', 1.0, (1, 2, 3)}\n</code></pre> <p>\u9023\u96c6\u8207\u4ea4\u96c6</p> <pre><code># mathematical set operations\nset_1 = set(['s', 'p', 'a','m'])\nset_2 = set(['h','a','m'])\n# union, intersection\nprint(set_1 | set_2) # {'h', 'p', 'm', 's', 'a'}\nprint(set_1 &amp; set_2) # {'a', 'm'}\n# symmetric difference\nprint(set_1 - set_2) # {'p', 's'}\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#dictionary","title":"Dictionary","text":"<p>\u4e00\u500bkey\u5c0d\u61c9\u4e00\u500bvalue</p> <pre><code># empty dictionary\nmy_dict = {}\n\n# dictionary with integer keys\nmy_dict = {1: 'a', 2: 'b'}\n\n# dictionary with mixed keys\nmy_dict = {'name': 'Tom', 1: 23}\n</code></pre> <p>\u4fee\u6539dictionary\u5167\u5bb9</p> <pre><code># Another define\nmy_dict = dict()\n\n# add elements\nmy_dict['One'] = '1'\nmy_dict['OneTwo'] = 12\nprint (my_dict) # {'One': '1', 'OneTwo': 12}\n# update value\nmy_dict['One'] = 111\nprint (my_dict) # {'One': 111, 'OneTwo': 12}\n</code></pre> <p>\u4f7f\u7528zip\u5c07\u5169\u500blist\u5408\u4f75\u6210dictionary</p> <pre><code># Merge two lists to a dictionary.\nnames = ['One', 'Two', 'Three', 'Four', 'Five']\nnumbers = [1, 2, 3, 4, 5]\nmerged_dict = dict(zip(names, numbers))\n\nprint(merged_dict) # {'One': 1, 'Two': 2, 'Three': 3, 'Four': 4, 'Five': 5}\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.2%E8%B3%87%E6%96%99%E5%9E%8B%E6%85%8B%E8%88%87%E8%BD%89%E6%8F%9B/#dictionary-methods","title":"Dictionary Methods","text":"<pre><code>my_dict = {'name':'Jack', 'age': 16, 'gender':'man'}\n# remove a particular item\nprint(my_dict.pop('gender')) # man\nprint(my_dict) # {'name': 'Jack', 'age': 16}\n# Returns view of dictionary's (key, value) pair\nprint(my_dict.items()) # [('name', 'Jack'), ('age', 16)]\n# Return a new view of the dictionary's keys.\nprint(my_dict.keys()) # ['name', 'age']\n# remove all items\nmy_dict.clear()\nprint(my_dict) # {}\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.3%E6%A2%9D%E4%BB%B6%E5%88%A4%E6%96%B7%E6%95%98%E8%BF%B0/","title":"2.3 \u689d\u4ef6\u5224\u65b7\u6558\u8ff0","text":""},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.3%E6%A2%9D%E4%BB%B6%E5%88%A4%E6%96%B7%E6%95%98%E8%BF%B0/#control-flow","title":"Control Flow","text":""},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.3%E6%A2%9D%E4%BB%B6%E5%88%A4%E6%96%B7%E6%95%98%E8%BF%B0/#if","title":"if\u689d\u4ef6\u5224\u65b7","text":"<p>\u8f38\u5165\u5192\u865f(:)\u4ee3\u8868\u689d\u4ef6\u7d50\u675f</p> <pre><code>num = 3\nif num &gt; 0:\n  print(num, \"is a positive number.\")\nnum = -1\nif num &gt; 0:\n  print(num, \"is a positive number.\")\n\n## Output: 3 is a positive number.\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.3%E6%A2%9D%E4%BB%B6%E5%88%A4%E6%96%B7%E6%95%98%E8%BF%B0/#if-else","title":"if ... else","text":"<pre><code>num = -1\nif num &gt;= 0:\n  print(num, \"Positive or Zero\")\nelse:\n  print(num, \"is a Negative number\")\n\n## Output: -1 is a Negative number.\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.3%E6%A2%9D%E4%BB%B6%E5%88%A4%E6%96%B7%E6%95%98%E8%BF%B0/#if-elif-else","title":"if ... elif ... else","text":"<pre><code>num = 0\nif num &gt; 0:\n  print(\"Positive number\")\nelif num == 0:\n  print(\"Zero\")\nelse:\n  print(\"Negative number\")\n## Output: Zero\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.3%E6%A2%9D%E4%BB%B6%E5%88%A4%E6%96%B7%E6%95%98%E8%BF%B0/#logical-or-and","title":"Logical - or, and","text":"<p>\u4ea6\u53ef\u4f7f\u7528|(or)\u548c&amp;(and)\u505a\u8868\u793a</p> <pre><code>num = 5\n\nif num == 0 or num == 1:\n  print(\"Zero or One\")\nelif num &gt;= 2 and num &lt;= 10:\n  print(\"From 2 to 10\")\nelse:\n  print('More')\n\n## Output: From 2 to 10\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.3%E6%A2%9D%E4%BB%B6%E5%88%A4%E6%96%B7%E6%95%98%E8%BF%B0/#is-not","title":"is, not","text":"<pre><code>num = 4\n\n# num == 4\nif num is 4:\n  print(\"num is 4\")\n\n# !(num == 5)\nif not num == 5:\n  print(\"num is not 5\")\n\n# num != 6\nif num is not 6:\n  print(\"num is not 6\")\n\n# !(num == 7)\nif not num is 7:\n  print(\"num is not 7\")\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.3%E6%A2%9D%E4%BB%B6%E5%88%A4%E6%96%B7%E6%95%98%E8%BF%B0/#test","title":"Test","text":""},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.3%E6%A2%9D%E4%BB%B6%E5%88%A4%E6%96%B7%E6%95%98%E8%BF%B0/#3-1","title":"3-1","text":"<pre><code>Q1. \u5efa\u7acb\u4e00\u500b\u9a57\u8b49\u5bc6\u78bc\u7684\u5c0f\u7a0b\u5f0f,\u7a0b\u5f0f \u5167\u5efa\u4e00\u7d44\u5b57\u4e32\u5bc6\u78bc,\u8acb\u4f7f\u7528\u8005\u8f38\u5165\u4e00\u7d44\u5b57\u4e32\u5bc6\u78bc,\n\u6bd4\u5c0d\u5bc6\u78bc\u662f\u5426\u8f38\u5165\u6b63\u78ba\u3002\nExpected Result:\n\u8acb\u8f38\u5165\u5bc6\u78bc: Passw0rd\n\u5bc6\u78bc\u6b63\u78ba\nor\n\u8acb\u8f38\u5165\u5bc6\u78bc: adfgg\n\u5bc6\u78bc\u932f\u8aa4\n</code></pre> <pre><code>password='0000'\nmyPass=input('\u8acb\u8f38\u5165\u5bc6\u78bc\uff1a')\nif myPass==password:\n    print('\u5bc6\u78bc\u6b63\u78ba')\nelse:\n    print('\u5bc6\u78bc\u932f\u8aa4')\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.4%E8%BF%B4%E5%9C%88/","title":"2.4 \u8ff4\u5708","text":""},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.4%E8%BF%B4%E5%9C%88/#for-loop","title":"For Loop\u8ff4\u5708","text":"<p>\u7d50\u5c3e\u9700\u8981\u6709:</p> <pre><code># Program to find the sum of all numbers stored in a list\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n# iterate over the list\nsum = 0\nfor val in numbers:\n  sum = sum + val\n\nprint(\"The sum is\", sum) # The sum is 55\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.4%E8%BF%B4%E5%9C%88/#for-loop-with-range","title":"For loop with range()","text":"<pre><code># range(stop)\n# range(start, stop[, step])\nnumbers = [1, 2, 3, 4, 5, 6]\n# iterate over the list using index\nfor i in range(len(numbers)):\n  print(\"number\", numbers[i])\n\n# iterate over the list using 2 steps\nfor i in range(0, len(numbers), 2):\n  print(\"2 steps\", numbers[i])\n\n# Output\nnumber 1\nnumber 2\nnumber 3\nnumber 4\nnumber 5\nnumber 6\n# Output\n2 steps 1\n2 steps 3\n2 steps 5\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.4%E8%BF%B4%E5%9C%88/#for-loop-with-enumerate","title":"For loop with enumerate( )","text":"<p>\u53d6\u5f97\u8ff4\u5708\u76ee\u524d\u7684\u7d22\u5f15\u503c</p> <pre><code>pets = ('Dogs', 'Cats', 'Turtles', 'Rabbits')\nfor index, pet in enumerate(pets):\n  print(index, pet)\n\n# Output:\n0 Dogs\n1 Cats\n2 Turtles\n3 Rabbits\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.4%E8%BF%B4%E5%9C%88/#while-loop","title":"While Loop","text":"<pre><code>n = 10\n# initialize sum and counter\nsum = 0\ni = 1\nwhile i &lt;= n:\n  sum = sum + i\n  i = i+1 # update counter\n# print the sum\nprint(\"The sum is\", sum) # The sum is 55\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.4%E8%BF%B4%E5%9C%88/#nested-loop","title":"Nested Loop","text":"<pre><code>for i in range(0, 2):\n  for j in range(0, 2):\n    print(\"i=\", i, \"j=\", j, \", i*j=\", i*j)\n# Output:\ni= 0 j= 0 , i*j= 0\ni= 0 j= 1 , i*j= 0\ni= 1 j= 0 , i*j= 0\ni= 1 j= 1 , i*j= 1\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.4%E8%BF%B4%E5%9C%88/#break-continue-and-pass","title":"break, continue and pass","text":"<pre><code>numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n# break\nfor val in numbers:\n  if val &gt;= 4:\n  break\nprint(val) \n\n# Output\n1\n2\n\n# pass 3\nfor val in numbers:\n  pass\n\n# continue\nfor val in numbers:\n  if val &gt;= 3 and val &lt;=8:\n  continue\nprint(val) \n# Output\n1\n2\n9\n10\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.4%E8%BF%B4%E5%9C%88/#list-comprehension","title":"List comprehension","text":"<p>\u7528\u8ff4\u5708\u5feb\u901f\u7522\u751f\u4e32\u5217</p> <pre><code># make new lists by using iterable\nsquares = []\nfor x in range(10):\n  squares.append(x**2)\nprint(squares) # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n\n# equivalently\nsquares = [x**2 for x in range(10)]\nprint(squares) # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n</code></pre> <p>\u8ff4\u5708\u5167\u52a0\u5165\u5224\u65b7\u5f0f\u7522\u751f\u4e32\u5217</p> <pre><code># with if\nsquares = [x**2 for x in range(10) if x % 2 == 0]\nprint(squares) ## [0, 4, 16, 36, 64]\n\n# equivalently\nsquares = []\nfor x in range(10):\n  if x % 2 == 0:\n    squares.append(x**2)\nprint(squares) ## [0, 4, 16, 36, 64]\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.4%E8%BF%B4%E5%9C%88/#test","title":"Test","text":"<pre><code>Q2. \u7d66\u4e88\u4e00\u500b\u5217\u8868,\u8a08\u7b97\u51fa\u5217\u8868\u4e2d\u5143\u7d20\u70ba 2\u7684\u500d\u6578\u7684\u548c\u3002\nSample List : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nExpected Result : 30\n</code></pre> <pre><code>list=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ntot=0\nfor index,num in enumerate(list):\n    if(index%2==1):\n        tot+=num\nprint(tot)\n</code></pre> <pre><code>Q3. \u8f38\u5165\u4eba\u7269\u7684\u8eab\u9ad8\u3001\u9ad4\u91cd,\u8a08\u7b97\u51fa\u8a72\u4eba\u7269\u7684 BMI\n\u516c\u5f0f:BMI = \u9ad4\u91cd(\u516c\u65a4) / \u8eab\u9ad8*\u8eab\u9ad8 (\u516c\u5c3a)\nP.S. \u65bc2002\u5e744\u6708\u516c\u5e03\u81fa\u7063\u6210\u4eba\u80a5\u80d6\u6a19\u6e96:\nBMI&lt;18.5 \u70ba\u904e\u8f15,\n18.5\u2266BMI&lt;24 \u70ba\u6b63\u5e38\u9ad4\u91cd,\n24\u2266BMI&lt;27 \u70ba\u904e\u91cd,\nBMI\u226727 \u5373\u70ba\u80a5\u80d6\n</code></pre> <pre><code>weight=float(input('\u8acb\u8f38\u5165\u9ad4\u91cd(kg)'))\nhigh=float(input('\u8acb\u8f38\u5165\u8eab\u9ad8(m)'))\nbmi=weight/(high*high)\nprint(type(bmi))\nif bmi&lt;18.5:\n  print('\u904e\u8f15')\nelif bmi&lt;24.0 and bmi&gt;=18.5:\n  print('\u6b63\u5e38')\nelif bmi&lt;27 and bmi&gt;=24:\n  print('\u904e\u91cd')\nelse:\n  print('\u80a5\u80d6')\n</code></pre> <pre><code>Q4. \u5370\u51fa 1 \u5230 50,\u4f46\u5982\u679c\u662f 3 \u7684\u500d\u6578\u5c31\u5370 Fizz,\u5982\u679c\u662f 5 \u7684\u500d\u6578\u5c31\u5370 Buzz,\u5982\n\u679c\u540c\u6642\u662f 3 \u548c 5 \u7684\u500d\u6578\u5c31\u5370 FizzBuzz\u3002\n</code></pre> <pre><code>for num in range(1,51):\n  if num%3==0 and num%5==0:\n    print('FizzBuzz ',num)  \n  elif num%5==0:\n    print('buzz ',num)\n  elif num%3==0:\n    print('Fizz ',num)\n  else:\n    print(num)\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/","title":"2.5 \u4e32\u5217\u7684\u57fa\u672c\u7528\u6cd5","text":"<p>Python \u7a0b\u5f0f\u8a9e\u8a00\u975e\u5e38\u597d\u4e0a\u624b\uff0c\u4ee5\u53ca\u5927\u91cf\u51fd\u5f0f\u5eab\u652f\u63f4\u53ef\u4ee5\u6e1b\u8f15\u7a0b\u5f0f\u4e0a\u7684\u8ca0\u64d4\u3002\u672c\u7bc7\u6587\u7ae0\u5c31\u4f86\u7d71\u6574 Python \u7a0b\u5f0f\u4e2d\u5e38\u898b\u7684\u4f7f\u7528\u65b9\u6cd5\u8207\u6280\u5de7\u3002\u9019\u4e9b\u5c07\u6703\u662f\u5be6\u6230\u4e2d\u5e38\u6703\u9047\u5230\u7684\u554f\u984c\uff0c\u4f8b\u5982\u908f\u8f2f\u63a7\u5236 (if...else)\u3001\u8ff4\u5708 (for loop)\u3001\u8cc7\u6599\u5bb9\u5668\u4e2d\u7684\u4e32\u5217 (List)\u3002</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#list","title":"\u4e32\u5217 (List)","text":"<p>\u4e32\u5217\u662f Python \u4e2d\u6700\u57fa\u672c\u7684\u6578\u64da\u7d50\u69cb\u3002\u5e8f\u5217\u4e2d\u7684\u6bcf\u500b\u5143\u7d20\u90fd\u5206\u914d\u4e00\u500b\u6578\u5b57- \u5b83\u7684\u4f4d\u7f6e\uff0c\u6216\u7d22\u5f15\uff0c\u7b2c\u4e00\u500b\u7d22\u5f15\u662f0\uff0c\u7b2c\u4e8c\u500b\u7d22\u5f15\u662f1\uff0c\u4f9d\u6b64\u985e\u63a8\u3002</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#list_1","title":"List \u63d2\u503c","text":"<pre><code>myList = []\nmyList.append('first')\nprint(myList)\nmyList.append('second')\nprint(myList)\n</code></pre> <pre><code>['first']\n['first', 'second']\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#list_2","title":"List \u67e5\u8a62\u4f4d\u7f6e","text":"<p>\u5c0b\u627e\u5143\u7d20\u7684\u7d22\u5f15</p> <pre><code>myList = ['apple', 'box', 'cat', 'dog']\nprint('Index: ', myList.index('box'))\n</code></pre> <pre><code>Index:  1\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#list_3","title":"List \u5e38\u898b\u7684\u65b9\u6cd5","text":"<ul> <li>len() \u56de\u50b3\u9577\u5ea6</li> <li>sum() \u56de\u50b3\u7e3d\u548c</li> <li>max() \u56de\u50b3\u6700\u5927\u503c</li> <li>min() \u56de\u50b3\u6700\u5c0f\u503c</li> </ul> <pre><code>myList = [2, 4, 6, 8, 10]\nprint('\u9577\u5ea6: ', len(myList))\nprint('\u7e3d\u548c: ', sum(myList))\nprint('\u6700\u5927\u503c: ', max(myList))\nprint('\u6700\u5c0f\u503c: ', min(myList))\n</code></pre> <pre><code>\u9577\u5ea6:  5\n\u7e3d\u548c:  30\n\u6700\u5927\u503c:  10\n\u6700\u5c0f\u503c:  2\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#list_4","title":"List \u5167\u5efa\u6392\u5e8f","text":"<p>\u7b2c\u4e00\u7a2e\u65b9\u5f0f\u662f\u76f4\u63a5\u547c\u53eb List \u672c\u8eab\u7684 <code>sort()</code> \u51fd\u6578\u9032\u884c\u6392\u5e8f\uff0c\u9019\u7a2e\u65b9\u5f0f\u6703\u76f4\u63a5\u6539\u8b8a\u539f\u672c\u7684 List \u5167\u5bb9\u3002\u7b2c\u4e8c\u7a2e\u65b9\u6cd5\u4f7f\u7528 <code>sorted()</code>\uff0c\u4ed6\u6703\u5c0d\u5143\u7d20\u6392\u5e8f\u4e4b\u5f8c\uff0c\u50b3\u56de\u4e00\u500b\u6392\u5e8f\u597d\u7684\u65b0 List\uff0c\u800c\u539f\u672c\u7684 List \u5247\u4e0d\u53d7\u5f71\u97ff\u3002</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#_1","title":"\u65b9\u6cd5\u4e00","text":"<pre><code>myList = [33, 22, 41, 12, 6, 4]\nmyList.sort() # \u5c0d\u539f\u672c\u7684 List \u6392\u5e8f\nmyList\n</code></pre> <pre><code>[4, 6, 12, 22, 33, 41]\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#_2","title":"\u65b9\u6cd5\u4e8c","text":"<pre><code>myList = [33, 22, 41, 12, 6, 4]\nnewList = sorted(myList) # \u6392\u5e8f\u4e26\u5efa\u7acb\u65b0\u7684 List\nprint('myList: ',myList)\nprint('newList:', newList)\n</code></pre> <pre><code>myList:  [33, 22, 41, 12, 6, 4]\nnewList: [4, 6, 12, 22, 33, 41]\n</code></pre> <p>sorted \u8207 sort \u4e5f\u53ef\u4ee5\u8655\u7406\u6587\u5b57\u7684\u6392\u5e8f\uff0c\u9810\u8a2d\u6703\u4f9d\u7167\u82f1\u6587\u5b57\u6bcd\u7684\u9806\u5e8f\u6392\u5217</p>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#list-0","title":"List \u521d\u59cb 0","text":"<p>\u5047\u8a2d\u6211\u5011\u6709\u9577\u5ea6\u70ba 10 \u7684\u4e32\u5217\uff0c\u9700\u8981\u5c07\u88e1\u9762\u6240\u6709\u503c\u505a\u521d\u59cb\u5316\u3002</p> <pre><code>listofzeros = [0] * 10\nprint(listofzeros)\n</code></pre> <pre><code>[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#list_5","title":"\u8ff4\u5708\u63d0\u53d6 List \u6240\u6709\u5143\u7d20","text":"<p>\u5047\u8a2d\u6211\u5011\u7684\u4e32\u5217\u4e2d\u6709 4 \u500b\u5143\u7d20\uff0c\u6211\u5011\u60f3\u900f\u904e\u8ff4\u5708\u4f9d\u5e8f\u5730\u53d6\u503c\u3002</p> <pre><code>myList = ['apple', 'box', 'cat', 'dog']\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#_3","title":"\u65b9\u6cd5\u4e00","text":"<pre><code># \u65b9\u6cd5\u3127\nfor i in range(len(myList)):\n    print(i,myList[i])\n</code></pre> <pre><code>0 apple\n1 box\n2 cat\n3 dog\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#_4","title":"\u65b9\u6cd5\u4e8c","text":"<pre><code># \u65b9\u6cd5\u4e8c\nfor word in myList:\n    print(word)\n</code></pre> <pre><code>apple\nbox\ncat\ndog\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.5%E4%B8%B2%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/#_5","title":"\u65b9\u6cd5\u4e09","text":"<pre><code># \u65b9\u6cd5\u4e09\nfor index, word in enumerate(myList, start=0):\n    print(index, word)\n</code></pre> <pre><code>0 apple\n1 box\n2 cat\n3 dog\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.6%E5%87%BD%E5%BC%8F/","title":"2.6 \u51fd\u5f0f","text":""},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.6%E5%87%BD%E5%BC%8F/#_1","title":"\u57fa\u672c\u8a9e\u6cd5\u67b6\u69cb","text":"<pre><code># Function is a group of related statements that perform a specific task.\ndef function_name(parameters):\n  statement(s)\n</code></pre> <ul> <li>def </li> <li>marks the start of function header.</li> <li>function name </li> <li>to uniquely identify it.</li> <li>parameters </li> <li>through which we pass values to a function. (optional)</li> <li>colon (:) </li> <li>to mark the end of function header.</li> <li>return statement  </li> <li>to return a value from the function. (optional)</li> </ul>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.6%E5%87%BD%E5%BC%8F/#define-call-function","title":"\u5b9a\u7fa9\u4e00\u500b\u7c21\u55ae\u7684Define, Call Function","text":"<p>\u7121\u8f38\u5165\u53c3\u6578\u547c\u53eb</p> <pre><code># define function without parameters\ndef greet():\n  print(\"Hello!\")\n# call function\ngreet() # Hello!\n</code></pre> <p>\u6709\u8f38\u5165\u53c3\u6578\u547c\u53eb</p> <pre><code># define function with parameter\ndef greet(name):\n  print(\"Hello\", name + \", nice to meet you.\")\ngreet(\"Felix\") # Hello Felix, nice to meet you.\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.6%E5%87%BD%E5%BC%8F/#return-statement","title":"\u5b9a\u7fa9\u4e00\u500b\u5177\u6709\u56de\u50b3\u503c\u7684\u51fd\u5f0f Return Statement","text":"<p>\u55ae\u4e00\u500b\u56de\u50b3</p> <pre><code># One\ndef add_two_nums(arg1, arg2):\n  sum = arg1 + arg2\n  return sum\n# call function\nresult = add_two_nums(10, 20)\nprint(result) # 30\n</code></pre> <p>\u591a\u500b\u56de\u50b3\u503c</p> <p>\u7b2c\u4e00\u7a2e\u662f\u56de\u50b3\u63a5\u6536\u4e00\u7d44tuple</p> <pre><code># constructs a tuple and returns this to the caller\ndef square(x,y):\n  return x*x, y*y\nresult = square(2,3)\nprint(result) # (4,9)\n</code></pre> <p>\u53ef\u4ee5\u5c07\u56de\u50b3\u7d50\u679c\u7528\u8b8a\u6578\u53bb\u63a5\u6536</p> <pre><code># \"unwrap\" the tuple into the variables directly by specifying the same number of variables\ndef square(x,y):\n  return x*x, y*y\nres_x, res_y = square(2,3)\nprint(res_x) # 4\nprint(res_y) # 9\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.6%E5%87%BD%E5%BC%8F/#anonymous-function-lambda","title":"\u533f\u540d\u51fd\u5f0f Anonymous Function - Lambda","text":"<p>\u55ae\u500b\u6578\u5165\u53c3\u6578</p> <pre><code># Lambda functions can have only one expression.\n# The expression is evaluated and returned.\ndouble = lambda x: x * 2\nprint(double(5)) # 10\n\n# is nearly the same as\ndef double(x):\n  return x * 2\n</code></pre> <p>\u591a\u500b\u8f38\u5165\u53c3\u6578</p> <pre><code># Lambda functions can have any number of arguments\ndouble = lambda x, y: x * 2 + y\nprint(double(5,2)) # 12\n\n# is nearly the same as\ndef double(x, y):\n  return x * 2 + y\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.6%E5%87%BD%E5%BC%8F/#global-local-variables","title":"Global, Local variables","text":"<pre><code># global\nx = \"global\"\n\ndef foo():\n  y = x + \"_variable\"\n  print(y)\nfoo() # global_variable\n</code></pre> <pre><code># local\ndef foo():\n  z = \"local\"\n\n# NameError: name 'z' is not defined\nprint(z)\n</code></pre>"},{"location":"2.%E5%9F%BA%E7%A4%8E%E8%AA%9E%E6%B3%95/2.6%E5%87%BD%E5%BC%8F/#test","title":"Test","text":"<pre><code>Q1. \u8acb\u5beb\u51fa\u4e00\u500b\u51fd\u5f0f,\u5c07\u5217\u8868\u4e2d\u7684\u6578\u5b57\u76f8\u4e58\u3002\nSample List : [1, 2, 3, 4, 5]\nExpected Result : 120\n</code></pre> <pre><code>def myFunction(list):\n  tot=1\n  for num in list:\n    tot*=num\n  return tot\nprint(myFunction([1, 2, 3, 4, 5]))\n</code></pre> <pre><code>Q2. \u8acb\u5beb\u4e00\u500b\u51fd\u5f0f,\u8f38\u5165\u4e00\u5b57\u4e32,\u8fd4\u56de\u53cd\u8f49\u5168\u90e8\u5b57\u5143\u7684\u5b57\u4e32\u3002\n\na_func(\"test\")\nExpected Result : \"tset\"\n</code></pre> <pre><code>def a_func(str):\n  reverseStr=\"\"\n  for char in range(len(str)-1,-1,-1):\n    reverseStr+=str[char]\n  return reverseStr\nprint(a_func('test'))\n</code></pre> <pre><code>def a_func(x):\n  return x[::-1]\nprint(a_func('test'))\n</code></pre> <pre><code>a_func=lambda x: x[::-1]\nprint(a_func('test'))\n</code></pre> <pre><code>Q3. \u8acb\u5beb\u4e00\u500b\u51fd\u5f0f\u628a\u88e1\u9762\u7684\u5b57\u4e32,\u6bcf\u500b\u55ae\u5b57\u672c\u9ad4\u505a\u53cd\u8f49,\u4f46\u662f\u55ae\u5b57\u7684\u9806\u5e8f\u4e0d\u8b8a\u3002 (Optional)\n\na_func(\"it is a test string\")\nExpected Result : \"ti si a tset gnirts\"\n</code></pre> <pre><code>def a_func(str):\n  arr=str[::-1].split(' ')\n  return (' ').join(arr[::-1])\nprint(a_func('it is a test string'))\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/","title":"Index","text":"\u6bd4\u8f03\u9762\u5411 Unittest Pytest \u5165\u9580\u96e3\u5ea6 \u9700\u8981\u5b78\u7fd2 testrunner\u3001testsuite\u3001testcase \u7b49\u6982\u5ff5\uff0c\u5c0d\u8c61\u5c0e\u5411\u77e5\u8b58\u8981\u6c42\u9ad8 \u96b1\u85cf\u4e86\u8a31\u591a\u8907\u96dc\u7d30\u7bc0\uff0c\u9069\u5408\u521d\u5b78\u8005\uff0c\u5165\u9580\u9580\u6abb\u66f4\u4f4e \u5c0d\u521d\u5b78\u8005\u9069\u5408\u5ea6 \u9069\u5408\u6709\u4e00\u5b9a Python \u7a0b\u5f0f\u57fa\u790e\u7684\u4eba \u5c0d\u7de8\u7a0b\u57fa\u790e\u5f31\u7684 Python \u958b\u767c\u8005\u66f4\u70ba\u9069\u5408 \u6e2c\u8a66\u53c3\u6578\u5316 \u9700\u624b\u52d5\u5be6\u73fe\u6e2c\u8a66\u53c3\u6578\u5316\uff0c\u9700\u64b0\u5beb\u66f4\u591a\u6a23\u677f\u4ee3\u78bc\u4f86\u652f\u63f4\u4e0d\u540c\u7684\u6e2c\u8a66\u5834\u666f\u3002 \u5167\u5efa\u6e2c\u8a66\u53c3\u6578\u5316\u652f\u63f4\uff0c\u53ef\u4f7f\u7528\u4e0d\u540c\u7684\u8f38\u5165\u6216\u914d\u7f6e\u4f86\u57f7\u884c\u540c\u4e00\u500b\u6e2c\u8a66\uff0c\u6e1b\u5c11\u91cd\u8907\u7a0b\u5f0f\u78bc\u3002 \u65b7\u8a00\u8655\u7406 \u65b7\u8a00\u65b9\u6cd5\u96d6\u7136\u5b8c\u6574\u4f46\u8a9e\u6cd5\u8f03\u70ba\u5197\u9577\uff0c\u932f\u8aa4\u8a0a\u606f\u4e0d\u5982 Pytest \u8a73\u7d30\u3002 \u63d0\u4f9b\u66f4\u5177\u8868\u9054\u529b\u4e14\u9748\u6d3b\u7684\u65b7\u8a00\u8655\u7406\uff0c<code>assert</code> \u8a9e\u53e5\u652f\u63f4\u66f4\u8a73\u7d30\u7684\u932f\u8aa4\u8a0a\u606f\uff0c\u6709\u52a9\u65bc\u8a3a\u65b7\u554f\u984c\u3002 \u751f\u614b\u7cfb\u7d71\u8207\u793e\u7fa4\u652f\u6301 \u793e\u7fa4\u6d3b\u8e8d\u5ea6\u4e00\u822c \u751f\u614b\u7cfb\u7d71\u8c50\u5bcc\uff0c\u63d2\u4ef6\u6578\u91cf\u773e\u591a\uff0c\u793e\u7fa4\u6d3b\u8e8d\u5ea6\u9ad8\uff0c\u6301\u7e8c\u7dad\u8b77 \u64f4\u5c55\u6027\u8207\u63d2\u4ef6\u6578\u91cf \u63d2\u4ef6\u652f\u6301\u6709\u9650 \u63d2\u4ef6\u8d85\u904e 300 \u500b\uff0c\u529f\u80fd\u64f4\u5c55\u6027\u5f37"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.1pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E5%9F%BA%E7%A4%8E%E7%AF%87%29/","title":"pytest \u5b78\u7fd2\u6307\u5357(\u57fa\u790e\u7bc7)","text":""},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.1pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E5%9F%BA%E7%A4%8E%E7%AF%87%29/#_1","title":"\u57fa\u672c\u64cd\u4f5c","text":"<p>\u5b78\u7fd2 pytest \u53ef\u4ee5\u5927\u5e45\u63d0\u5347\u7de8\u5beb\u55ae\u5143\u6e2c\u8a66\u7684\u6548\u7387\uff0c\u4e26\u8f15\u9b06\u6574\u5408\u81f3 CI/CD \u5de5\u4f5c\u6d41\u7a0b\u4e2d\u3002\u5efa\u8b70\u5f9e\u7c21\u55ae\u7684\u6e2c\u8a66\u958b\u59cb\uff0c\u9010\u6b65\u6df1\u5165\u63a2\u7d22 pytest \u7684\u5404\u7a2e\u9032\u968e\u529f\u80fd\u3002</p>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.1pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E5%9F%BA%E7%A4%8E%E7%AF%87%29/#1-pytest","title":"1. \u5b89\u88dd pytest","text":"<p>\u5728 Python \u4e2d\u4f7f\u7528 pytest \u4e4b\u524d\uff0c\u5fc5\u9808\u5148\u5b89\u88dd\u5b83\u3002\u53ef\u4ee5\u901a\u904e pip \u4f86\u5b89\u88dd\uff1a</p> <pre><code>pip install pytest\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.1pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E5%9F%BA%E7%A4%8E%E7%AF%87%29/#2","title":"2. \u64b0\u5beb\u4e00\u500b\u7c21\u55ae\u7684\u6e2c\u8a66\u6848\u4f8b","text":"<p>pytest \u53ef\u4ee5\u8b93\u4f60\u8f15\u9b06\u64b0\u5beb\u6e2c\u8a66\u6848\u4f8b\u3002\u5047\u8a2d\u6709\u4e00\u500b\u540d\u70ba math_func.py \u7684\u6a94\u6848\uff0c\u5176\u4e2d\u6709\u4e00\u500b\u7c21\u55ae\u7684\u51fd\u6578\uff1a</p> <pre><code># math_func.py\ndef add(x, y):\n    return x + y\n</code></pre> <p>\u53ef\u4ee5\u64b0\u5beb\u4e00\u500b\u6e2c\u8a66\u6a94\u6848\uff0c\u4f8b\u5982 test_math_func.py\uff1a</p> <pre><code># test_math_func.py\nfrom math_func import add\n\ndef test_add():\n    assert add(1, 2) == 3\n    assert add(0, 0) == 0\n    assert add(-1, 1) == 0\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.1pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E5%9F%BA%E7%A4%8E%E7%AF%87%29/#3","title":"3. \u57f7\u884c\u6e2c\u8a66","text":"<p>\u5728\u5c08\u6848\u7684\u6839\u76ee\u9304\u4e0b\u57f7\u884c pytest\uff0c\u5176\u4e2d <code>-v</code> \u8868\u793a\u8a73\u7d30\u6a21\u5f0f\uff0c\u986f\u793a\u6bcf\u500b\u6e2c\u8a66\u6848\u4f8b\u7684\u7d50\u679c\u3002</p> <pre><code>pytest -v\n</code></pre> <p>pytest \u6703\u81ea\u52d5\u5075\u6e2c\u4ee5 test_ \u958b\u982d\u7684\u6a94\u6848\u4ee5\u53ca\u4ee5 test_ \u958b\u982d\u7684\u51fd\u6578\u4e26\u57f7\u884c\u5b83\u5011\u3002\u7d50\u679c\u6703\u8a73\u7d30\u5730\u986f\u793a\u6e2c\u8a66\u904e\u7a0b\u8207\u7d50\u679c\u3002</p> <p></p> <p>pytest \u6703\u81ea\u52d5\u89e3\u6790\u932f\u8aa4\u8a0a\u606f\uff0c\u4f7f\u5f97\u6e2c\u8a66\u5931\u6557\u6642\u63d0\u4f9b\u66f4\u5177\u53ef\u8b80\u6027\u7684\u8f38\u51fa\u3002\u4ee5\u4e0b\u7bc4\u4f8b\u624b\u52d5\u52a0\u5165\u4e00\u500b\u5931\u6557\u7684\u6e2c\u8a66\uff0cpytest \u6703\u6e05\u695a\u544a\u8a34\u4f60\u9810\u671f\u503c\u548c\u5be6\u969b\u7d50\u679c\u7684\u5dee\u7570\u3002</p> <pre><code>def test_add_fail():\n    assert add(1, 2) == 0\n</code></pre> <p>\u63a5\u8457\u5728\u8a72\u76ee\u9304\u4e0b\u57f7\u884c <code>pytest -v</code> \u5f8c\u5373\u53ef\u770b\u5230\u9019\u500b\u6e2c\u8a66\u9805\u76ee\u6709\u7d05\u8272\u7684 fail\u3002</p> <p></p>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.1pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E5%9F%BA%E7%A4%8E%E7%AF%87%29/#pytest_1","title":"pytest \u5e38\u7528\u6307\u4ee4\u9078\u9805","text":"\u9078\u9805 \u8aaa\u660e \u7528\u6cd5\u7bc4\u4f8b <code>-v</code> \u8a73\u7d30\u6a21\u5f0f\uff0c\u986f\u793a\u6bcf\u500b\u6e2c\u8a66\u6848\u4f8b\u7684\u7d50\u679c <code>pytest -v</code> <code>-s</code> \u986f\u793a\u6e2c\u8a66\u904e\u7a0b\u4e2d\u7684\u6a19\u6e96\u8f38\u51fa\uff0c\u5982 <code>print()</code> \u5167\u5bb9 <code>pytest -s</code> <code>-k &lt;expression&gt;</code> \u50c5\u904b\u884c\u7b26\u5408\u689d\u4ef6\u7684\u6e2c\u8a66\u6848\u4f8b <code>pytest -k \"test_function_name\"</code> <code>-m &lt;mark&gt;</code> \u50c5\u904b\u884c\u7279\u5b9a\u6a19\u8a18\u7684\u6e2c\u8a66\u6848\u4f8b <code>pytest -m \"slow\"</code> <code>-x</code> \u9996\u6b21\u6e2c\u8a66\u5931\u6557\u6642\u505c\u6b62\u6e2c\u8a66\u57f7\u884c <code>pytest -x</code> <code>--tb=short</code> \u7e2e\u77ed\u932f\u8aa4\u7684 traceback \u8a0a\u606f\uff0c\u8b93\u5831\u544a\u66f4\u7c21\u6f54 <code>pytest --tb=short</code> <code>--maxfail=&lt;num&gt;</code> \u9047\u5230\u6307\u5b9a\u6578\u91cf\u7684\u6e2c\u8a66\u5931\u6557\u5f8c\u505c\u6b62\u57f7\u884c\u6e2c\u8a66 <code>pytest --maxfail=2</code> <code>--html=&lt;file&gt;</code> \u751f\u6210 HTML \u683c\u5f0f\u7684\u6e2c\u8a66\u5831\u544a\uff08\u9700\u8981 <code>pytest-html</code> \u63d2\u4ef6\uff09 <code>pytest --html=report.html</code> <code>--junitxml=&lt;file&gt;</code> \u751f\u6210 JUnit XML \u683c\u5f0f\u7684\u6e2c\u8a66\u5831\u544a <code>pytest --junitxml=report.xml</code> <code>--durations=&lt;num&gt;</code> \u5217\u51fa\u904b\u884c\u6642\u9593\u6700\u9577\u7684 <code>&lt;num&gt;</code> \u500b\u6e2c\u8a66\u6848\u4f8b <code>pytest --durations=5</code> <code>--cov=&lt;module_or_path&gt;</code> \u751f\u6210\u7a0b\u5f0f\u78bc\u8986\u84cb\u7387\u5831\u544a\uff08\u9700\u8981 <code>pytest-cov</code> \u63d2\u4ef6\uff09 <code>pytest --cov=my_module</code> <code>--reuse-db</code> \u91cd\u65b0\u4f7f\u7528\u4e0a\u6b21\u7684\u8cc7\u6599\u5eab\u6e2c\u8a66\u74b0\u5883\uff08\u9069\u7528\u65bc\u6e2c\u8a66\u8cc7\u6599\u5eab\u74b0\u5883\uff09 <code>pytest --reuse-db</code>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.1pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E5%9F%BA%E7%A4%8E%E7%AF%87%29/#html","title":"\u57f7\u884c\u6e2c\u8a66\u4e26\u751f\u6210 HTML \u5831\u544a","text":"<p>\u6211\u5011\u53ef\u4ee5\u5c07\u6e2c\u8a66\u7d50\u679c\u76f4\u63a5\u7522\u751f report.html\uff0c\u53ea\u9700\u8981\u5b89\u88dd pytest-html \u5957\u4ef6\u3002</p> <pre><code>pip install pytest-html\n</code></pre> <p>\u63a5\u8457\u57f7\u884c\u6e2c\u8a66\u4e26\u751f\u6210 HTML \u5831\u544a\uff0c\u4f7f\u7528 --html \u9078\u9805\u4f86\u6307\u5b9a\u5831\u544a\u7684\u6a94\u6848\u540d\u7a31\u3002\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u540c\u6642\u642d\u914d\u4e0a\u65b9\u8868\u683c\u4e2d\u7684\u5176\u4ed6\u5e38\u7528\u6307\u4ee4\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u66f4\u9748\u6d3b\u5730\u63a7\u5236\u6e2c\u8a66\u6d41\u7a0b\u3002</p> <pre><code>pytest -v --html=report.html\n</code></pre> <p>\u9019\u6a23\u6e2c\u8a66\u5b8c\u6210\u5f8c\uff0cpytest \u6703\u5728\u5c08\u6848\u76ee\u9304\u4e0b\u751f\u6210\u4e00\u500b report.html\uff0c\u88e1\u9762\u5305\u542b\u6e2c\u8a66\u7d50\u679c\u7684\u8a73\u7d30\u5831\u544a\u3002</p> <p></p> <p>\u4e0a\u8ff0\u65b9\u6cd5\u751f\u6210\u7684\u5831\u544a\uff0cCSS \u662f\u7368\u7acb\u7684\uff0c\u7576\u5206\u4eab\u5831\u544a\u6642\u6a23\u5f0f\u53ef\u80fd\u6703\u907a\u5931\u3002\u70ba\u4e86\u66f4\u597d\u5730\u5206\u4eab\u4e26\u901a\u904e\u90f5\u4ef6\u5c55\u793a\u5831\u544a\uff0c\u53ef\u4ee5\u5c07 CSS \u6a23\u5f0f\u5408\u4f75\u5230 HTML \u4e2d\u3002</p> <pre><code>pytest --html=report.html --self-contained-html\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.1pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E5%9F%BA%E7%A4%8E%E7%AF%87%29/#pytest_2","title":"\u4f7f\u7528 pytest \u7684\u9032\u968e\u529f\u80fd","text":"<p>pytest \u5e38\u7528\u6a19\u8a18</p> \u6a19\u8a18 \u8aaa\u660e \u7528\u6cd5\u7bc4\u4f8b <code>@pytest.mark.skip</code> \u8df3\u904e\u6e2c\u8a66\u6848\u4f8b <code>@pytest.mark.skip(reason=\"Not implemented\")</code> <code>@pytest.mark.xfail</code> \u9810\u671f\u5931\u6557\u7684\u6e2c\u8a66\u6848\u4f8b <code>@pytest.mark.xfail(raises=ZeroDivisionError)</code> <code>@pytest.mark.parametrize</code> \u53c3\u6578\u5316\u6e2c\u8a66\uff0c\u5141\u8a31\u4f7f\u7528\u591a\u7d44\u53c3\u6578\u6e2c\u8a66\u540c\u4e00\u51fd\u6578 <code>@pytest.mark.parametrize(\"a,b\", [(1, 2), (3, 4)])</code> <code>@pytest.fixture</code> \u5b9a\u7fa9\u6e2c\u8a66\u524d\u7f6e\u74b0\u5883 <code>@pytest.fixture</code>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.1pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E5%9F%BA%E7%A4%8E%E7%AF%87%29/#1-pytestfixture","title":"(1)  pytest.fixture","text":"<p>fixture \u53ef\u4ee5\u7528\u4f86\u8a2d\u7f6e\u6e2c\u8a66\u524d\u7684\u6e96\u5099\u6b65\u9a5f\uff0c\u4f8b\u5982\u521d\u59cb\u5316\u8cc7\u6599\u5eab\u6216\u5efa\u7acb\u7269\u4ef6\uff1a</p> <pre><code>import pytest\n\n@pytest.fixture\ndef sample_data():\n    return {\"key\": \"value\"}\n\ndef test_sample_data(sample_data):\n    assert sample_data[\"key\"] == \"value\"\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.1pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E5%9F%BA%E7%A4%8E%E7%AF%87%29/#2_1","title":"(2) \u6e2c\u8a66\u591a\u7d44\u8f38\u5165","text":"<p>\u53ef\u4ee5\u4f7f\u7528 pytest.mark.parametrize \u4f86\u6e2c\u8a66\u591a\u7d44\u8f38\u5165\uff1a</p> <pre><code>import pytest\nfrom math_func import add\n\n@pytest.mark.parametrize(\"a, b, expected\", [(1, 2, 3), (0, 0, 0), (-1, 1, 0)])\ndef test_add_multi(a, b, expected):\n    assert add(a, b) == expected\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/","title":"pytest \u5b78\u7fd2\u6307\u5357(\u9032\u968e\u7bc7)","text":"<p>\u63a5\u4e0b\u4f86\u7684\u6559\u5b78\u4e2d\uff0c\u6211\u5011\u5c07\u8a0e\u8ad6 pytest \u7684\u9032\u968e\u529f\u80fd\u3002\u6211\u5011\u9996\u5148\u8a2d\u7f6e\u4e86\u4e00\u500b\u7c21\u55ae\u7684\u9805\u76ee\u67b6\u69cb\uff0cpytest-ch2 \u5c08\u6848\u5305\u542b\u4e00\u500b libs \u8cc7\u6599\u593e\uff0c\u88e1\u9762\u6709\u4e00\u500b module.py \u6a94\u6848\uff0c\u4ee5\u53ca\u4e00\u500b tests \u8cc7\u6599\u593e\uff0c\u7528\u4f86\u653e\u7f6e\u6e2c\u8a66\u6a94\u6848 test_module.py\u3002</p> <p>\u5c08\u6848\u7d50\u69cb\u5982\u4e0b\uff1a</p> <pre><code>pytest-ch2\n\u2502\n\u251c\u2500libs\n\u2502      module.py\n\u2502\n\u2514\u2500tests\n       test_module.py\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#_1","title":"\u5efa\u7acb\u4e00\u500b\u7d50\u69cb\u5316\u7684\u6e2c\u8a66\u5c08\u6848","text":"<p>\u5047\u8a2d <code>libs/module.py</code> \u5305\u542b\u4e00\u500b\u7c21\u55ae\u7684\u51fd\u6578\uff0c\u4f8b\u5982\uff1a</p> <pre><code># libs/module.py\ndef add(a, b):\n    return a + b\n</code></pre> <p>\u63a5\u8457\u5728 <code>tests/test_module.py</code> \u4e2d\u70ba\u9019\u500b add \u51fd\u6578\u64b0\u5beb\u55ae\u5143\u6e2c\u8a66\u3002</p> <pre><code># tests/test_module.py\nimport pytest\nfrom libs.module import add\n\n@pytest.mark.parametrize(\"a, b, expected\", [\n    (1, 2, 3),\n    (0, 0, 0),\n    (-1, -1, -2),\n    (-1, 2, 1)\n])\ndef test_add(a, b, expected):\n    assert add(a, b) == expected\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#_2","title":"\u5efa\u7acb\u5c08\u6848\u8a2d\u5b9a\u6a94","text":"<p>\u7531\u65bc\u6211\u5011\u6703\u532f\u5165\u5176\u4ed6\u8cc7\u6599\u593e\u4e2d\u7684\u529f\u80fd\uff0c\u5982\u679c\u6c92\u6709\u6b63\u78ba\u914d\u7f6e\u5c08\u6848\u8def\u5f91\uff0c\u53ef\u80fd\u6703\u9047\u5230 <code>ModuleNotFoundError</code>\uff0c\u7121\u6cd5\u627e\u5230\u5c0d\u61c9\u7684\u6a21\u7d44\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u6211\u5011\u53ef\u4ee5\u5efa\u7acb\u4e00\u500b\u8a2d\u5b9a\u6a94\uff0c\u544a\u8a34 pytest \u61c9\u8a72\u641c\u5c0b\u7684\u8def\u5f91\u3002\u4f60\u53ef\u4ee5\u5728\u5c08\u6848\u7684\u6839\u76ee\u9304\u4e0b\u5efa\u7acb <code>pytest.ini</code> \u6a94\u6848\uff0c\u4e26\u52a0\u5165\u4ee5\u4e0b\u5167\u5bb9\uff1a</p> <pre><code>[pytest]\npythonpath = .\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#_3","title":"\u57f7\u884c\u6e2c\u8a66","text":"<p>\u5728\u5c08\u6848\u7684\u6839\u76ee\u9304\u4e0b\u57f7\u884c pytest\uff0c\u5176\u4e2d <code>-v</code> \u8868\u793a\u8a73\u7d30\u6a21\u5f0f\uff0c\u986f\u793a\u6bcf\u500b\u6e2c\u8a66\u6848\u4f8b\u7684\u7d50\u679c\u3002</p> <pre><code>pytest -v\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#pytestini","title":"<code>pytest.ini</code> \u7684\u57fa\u672c\u529f\u80fd","text":"<p><code>pytest.ini</code> \u662f pytest \u7684\u914d\u7f6e\u6a94\u6848\uff0c\u901a\u5e38\u7528\u4f86\u70ba pytest \u6e2c\u8a66\u74b0\u5883\u8a2d\u5b9a\u5168\u57df\u7684\u9078\u9805\u548c\u53c3\u6578\u3002\u9019\u500b\u6a94\u6848\u7684\u4f5c\u7528\u662f\u8b93\u4f60\u53ef\u4ee5\u5728\u4e0d\u5fc5\u6bcf\u6b21\u90fd\u5728\u547d\u4ee4\u5217\u4e0a\u6307\u5b9a\u53c3\u6578\u7684\u60c5\u6cc1\u4e0b\uff0c\u914d\u7f6e pytest \u7684\u884c\u70ba\u3002</p> <p>1.\u4fee\u6539\u6e2c\u8a66\u8def\u5f91\uff1a\u8a2d\u5b9a pytest \u61c9\u8a72\u5f9e\u54ea\u88e1\u958b\u59cb\u5c0b\u627e\u6e2c\u8a66\u6a94\u6848\u3002 2.\u8a2d\u5b9a pytest \u7684\u9810\u8a2d\u9078\u9805\uff1a\u53ef\u4ee5\u8a2d\u5b9a\u5982\u555f\u52d5 verbose \u6a21\u5f0f\u3001\u8a2d\u7f6e\u6e2c\u8a66\u7684\u8f38\u51fa\u683c\u5f0f\u7b49\u3002 3.\u8a2d\u5b9a\u5ffd\u7565\u7684\u6a94\u6848\uff1a\u53ef\u4ee5\u6307\u5b9a\u54ea\u4e9b\u6a94\u6848\u6216\u8cc7\u6599\u593e\u61c9\u88ab\u5ffd\u7565\uff0c\u907f\u514d pytest \u641c\u5c0b\u9019\u4e9b\u4f4d\u7f6e\u3002 4.\u8a2d\u5b9a\u81ea\u8a02\u7684\u6e2c\u8a66\u6a19\u7c64\uff1a\u53ef\u4ee5\u70ba\u6e2c\u8a66\u6a19\u8a18\u4e0d\u540c\u7684\u6a19\u7c64\uff0c\u4e26\u6839\u64da\u6a19\u7c64\u4f86\u57f7\u884c\u6e2c\u8a66\u3002</p>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#pytestini_1","title":"\u57fa\u672c\u7684 <code>pytest.ini</code> \u7d50\u69cb","text":"<p>\u683c\u5f0f\u5f88\u7c21\u55ae\uff0c\u5b83\u4f7f\u7528\u985e\u4f3c ini \u6a94\u6848\u7684\u683c\u5f0f\u3002\u4ee5\u4e0b\u662f\u4e00\u500b\u57fa\u672c\u7bc4\u4f8b\uff1a</p> <pre><code>[pytest]\naddopts = -v --tb=short  # \u8a2d\u7f6e\u9ed8\u8a8d\u9078\u9805\uff0c\u5982 verbose \u6a21\u5f0f\u548c\u7c21\u5316\u7684 traceback \u8f38\u51fa\ntestpaths = tests  # \u6307\u5b9a\u6e2c\u8a66\u6a94\u6848\u7684\u8def\u5f91\uff0c\u9019\u88e1\u662f tests \u8cc7\u6599\u593e\npython_files = test_*.py  # \u6307\u5b9a pytest \u641c\u7d22\u7684\u6e2c\u8a66\u6a94\u6848\u540d\u7a31\u6a21\u5f0f\npython_classes = Test*  # \u6307\u5b9a pytest \u641c\u7d22\u7684\u6e2c\u8a66\u985e\u5225\u540d\u7a31\u6a21\u5f0f\npython_functions = test_*  # \u6307\u5b9a pytest \u641c\u7d22\u7684\u6e2c\u8a66\u51fd\u6578\u540d\u7a31\u6a21\u5f0f\nmarkers = \n    slow: \u6e2c\u8a66\u904b\u884c\u8f03\u6162\u7684\u6a19\u8a18\n    integration: \u96c6\u6210\u6e2c\u8a66\u6a19\u8a18\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#pytestini_2","title":"<code>pytest.ini</code> \u7684\u5e38\u898b\u8a2d\u7f6e\u9078\u9805","text":""},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#1addopts","title":"1.addopts","text":"<p>\u9019\u500b\u9078\u9805\u5141\u8a31\u4f60\u5728\u904b\u884c pytest \u6642\u6dfb\u52a0\u9ed8\u8a8d\u7684\u9078\u9805\u3002\u4f8b\u5982\uff0c-v \u7528\u4f86\u958b\u555f\u8a73\u7d30\u6a21\u5f0f\uff0c--tb=short \u7528\u4f86\u7c21\u5316\u932f\u8aa4\u8a0a\u606f\u7684 traceback \u8f38\u51fa\u3002</p> <pre><code>addopts = -v --tb=short\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#2testpaths","title":"2.testpaths","text":"<p>\u6307\u5b9a pytest \u641c\u7d22\u6e2c\u8a66\u6a94\u6848\u7684\u8def\u5f91\u3002\u9019\u53ef\u4ee5\u7528\u4f86\u544a\u8a34 pytest \u53ea\u5728\u7279\u5b9a\u8cc7\u6599\u593e\u4e0b\u5c0b\u627e\u6e2c\u8a66\u6a94\u6848\u3002</p> <pre><code>testpaths = tests\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#3python_files","title":"3.python_files","text":"<p>\u63a7\u5236 pytest \u61c9\u8a72\u5c0b\u627e\u54ea\u4e9b\u6a94\u6848\u4f86\u9032\u884c\u6e2c\u8a66\u3002\u9810\u8a2d pytest \u6703\u5c0b\u627e\u6a94\u540d\u4ee5 test_ \u958b\u982d\u6216\u7d50\u5c3e\u7684\u6a94\u6848\u3002</p> <pre><code>python_files = test_*.py\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#4python_classes","title":"4.python_classes","text":"<p>\u63a7\u5236 pytest \u61c9\u8a72\u641c\u5c0b\u54ea\u4e9b\u985e\u5225\u4f86\u4f5c\u70ba\u6e2c\u8a66\u985e\u5225\u3002\u9810\u8a2d pytest \u6703\u5c0b\u627e\u540d\u7a31\u4ee5 Test \u958b\u982d\u7684\u985e\u5225\u3002</p> <pre><code>python_classes = Test*\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#5python_functions","title":"5.python_functions","text":"<p>\u63a7\u5236 pytest \u61c9\u8a72\u641c\u5c0b\u54ea\u4e9b\u51fd\u6578\u4f86\u4f5c\u70ba\u6e2c\u8a66\u51fd\u6578\u3002\u9810\u8a2d pytest \u6703\u5c0b\u627e\u540d\u7a31\u4ee5 test_ \u958b\u982d\u7684\u51fd\u6578\u3002</p> <pre><code>python_functions = test_*\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#6markers","title":"6.markers","text":"<p>\u81ea\u8a02\u6a19\u8a18\u4f86\u6a19\u7c64\u7279\u5b9a\u7684\u6e2c\u8a66\u6848\u4f8b\uff0c\u5141\u8a31\u4f60\u6839\u64da\u6a19\u7c64\u4f86\u57f7\u884c\u6e2c\u8a66\u3002\u4f8b\u5982\uff0c\u5c07\u904b\u884c\u8f03\u6162\u7684\u6e2c\u8a66\u6a19\u8a18\u70ba slow\uff0c\u5728\u57f7\u884c\u6e2c\u8a66\u6642\uff0c\u53ef\u4ee5\u4f7f\u7528 pytest -m slow \u4f86\u9078\u64c7\u53ea\u57f7\u884c\u9019\u985e\u6a19\u8a18\u7684\u6e2c\u8a66\u3002</p> <pre><code>markers = \n    slow: \u6e2c\u8a66\u904b\u884c\u8f03\u6162\u7684\u6a19\u8a18\n    integration: \u96c6\u6210\u6e2c\u8a66\u6a19\u8a18\n</code></pre>"},{"location":"6.%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/6.2pytest%20%E5%AD%B8%E7%BF%92%E6%8C%87%E5%8D%97%28%E9%80%B2%E9%9A%8E%E7%AF%87%29/#pytestini_3","title":"\u64b0\u5beb pytest.ini \u7684\u6280\u5de7","text":"<p>1.\u4f7f\u7528\u81ea\u8a02\u6a19\u8a18\u9032\u884c\u5206\u985e\uff1a</p> <ul> <li>\u7576\u5c08\u6848\u898f\u6a21\u8f03\u5927\u6642\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u8a02\u6a19\u8a18\u4f86\u5c07\u6e2c\u8a66\u5206\u985e\uff0c\u4f8b\u5982\u6a19\u8a18\u67d0\u4e9b\u6e2c\u8a66\u70ba \"\u6162\u901f\u6e2c\u8a66\" \u6216 \"\u96c6\u6210\u6e2c\u8a66\"\u3002\u9019\u6a23\u4f60\u5c31\u53ef\u4ee5\u6839\u64da\u6a19\u7c64\u4f86\u57f7\u884c\u6e2c\u8a66\uff0c\u7bc0\u7701\u6642\u9593\u3002</li> </ul> <p>2.\u7c21\u5316\u547d\u4ee4\u884c\u9078\u9805\uff1a</p> <ul> <li>\u900f\u904e <code>addopts</code> \u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u8a2d\u5b9a\u9ed8\u8a8d\u9078\u9805\uff0c\u9019\u6a23\u5c31\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd\u5728\u547d\u4ee4\u5217\u4e0a\u8f38\u5165\u76f8\u540c\u7684\u9078\u9805\uff0c\u8b93\u6e2c\u8a66\u904b\u884c\u66f4\u65b9\u4fbf\u3002</li> </ul> <p>3.\u8abf\u6574\u6e2c\u8a66\u8def\u5f91\u548c\u547d\u540d\u898f\u5247\uff1a</p> <ul> <li>\u5982\u679c\u4f60\u7684\u5c08\u6848\u67b6\u69cb\u4e0d\u7b26\u5408 pytest \u7684\u9810\u8a2d\u898f\u5247\uff08\u4f8b\u5982\uff0c\u6e2c\u8a66\u6a94\u6848\u4e0d\u4ee5 <code>test_</code> \u958b\u982d\uff09\uff0c\u53ef\u4ee5\u901a\u904e <code>python_files</code> \u548c <code>python_functions</code> \u4f86\u5b9a\u5236\u6aa2\u6e2c\u898f\u5247\u3002</li> </ul>"}]}